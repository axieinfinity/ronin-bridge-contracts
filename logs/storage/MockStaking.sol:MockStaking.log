src/mocks/MockStaking.sol:MockStaking:_accumulatedRps (storage_slot: 0) (offset: 0) (type: mapping(address => mapping(uint256 => struct PeriodWrapperConsumer.PeriodWrapper))) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:_userReward (storage_slot: 1) (offset: 0) (type: mapping(address => mapping(address => struct IRewardPool.UserRewardFields))) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:_stakingPool (storage_slot: 2) (offset: 0) (type: mapping(address => struct IRewardPool.PoolFields)) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:______gap (storage_slot: 3) (offset: 0) (type: uint256[50]) (numberOfBytes: 1600)
src/mocks/MockStaking.sol:MockStaking:_stakingAmount (storage_slot: 53) (offset: 0) (type: mapping(address => uint256)) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:_periodSlashed (storage_slot: 54) (offset: 0) (type: mapping(uint256 => bool)) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:_stakingTotal (storage_slot: 55) (offset: 0) (type: uint256) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:lastUpdatedPeriod (storage_slot: 56) (offset: 0) (type: uint256) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:pendingReward (storage_slot: 57) (offset: 0) (type: uint256) (numberOfBytes: 32)
src/mocks/MockStaking.sol:MockStaking:poolAddr (storage_slot: 58) (offset: 0) (type: address) (numberOfBytes: 20)