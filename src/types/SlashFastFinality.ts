/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface SlashFastFinalityInterface extends utils.Interface {
  functions: {
    "getContract(uint8)": FunctionFragment;
    "getFastFinalitySlashingConfigs()": FunctionFragment;
    "precompileValidateFastFinalityAddress()": FunctionFragment;
    "setContract(uint8,address)": FunctionFragment;
    "setFastFinalitySlashingConfigs(uint256,uint256)": FunctionFragment;
    "slashFastFinality(address,bytes,uint256,bytes32[2],bytes[][2],bytes[2])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getContract",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFastFinalitySlashingConfigs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "precompileValidateFastFinalityAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setContract",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFastFinalitySlashingConfigs",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "slashFastFinality",
    values: [
      string,
      BytesLike,
      BigNumberish,
      [BytesLike, BytesLike],
      [BytesLike[], BytesLike[]],
      [BytesLike, BytesLike]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "getContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFastFinalitySlashingConfigs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "precompileValidateFastFinalityAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFastFinalitySlashingConfigs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "slashFastFinality",
    data: BytesLike
  ): Result;

  events: {
    "ContractUpdated(uint8,address)": EventFragment;
    "FastFinalitySlashingConfigsUpdated(uint256,uint256)": EventFragment;
    "Slashed(address,uint8,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ContractUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "FastFinalitySlashingConfigsUpdated"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Slashed"): EventFragment;
}

export type ContractUpdatedEvent = TypedEvent<
  [number, string],
  { contractType: number; addr: string }
>;

export type ContractUpdatedEventFilter = TypedEventFilter<ContractUpdatedEvent>;

export type FastFinalitySlashingConfigsUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  { slashFastFinalityAmount: BigNumber; fastFinalityJailUntilBlock: BigNumber }
>;

export type FastFinalitySlashingConfigsUpdatedEventFilter =
  TypedEventFilter<FastFinalitySlashingConfigsUpdatedEvent>;

export type SlashedEvent = TypedEvent<
  [string, number, BigNumber],
  { validator: string; slashType: number; period: BigNumber }
>;

export type SlashedEventFilter = TypedEventFilter<SlashedEvent>;

export interface SlashFastFinality extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SlashFastFinalityInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { contract_: string }>;

    getFastFinalitySlashingConfigs(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        slashFastFinalityAmount_: BigNumber;
        fastFinalityJailUntilBlock_: BigNumber;
      }
    >;

    precompileValidateFastFinalityAddress(
      overrides?: CallOverrides
    ): Promise<[string]>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFastFinalitySlashingConfigs(
      slashAmount: BigNumberish,
      jailUntilBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    slashFastFinality(
      consensusAddr: string,
      voterPublicKey: BytesLike,
      targetBlockNumber: BigNumberish,
      targetBlockHash: [BytesLike, BytesLike],
      listOfPublicKey: [BytesLike[], BytesLike[]],
      aggregatedSignature: [BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getContract(
    contractType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getFastFinalitySlashingConfigs(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & {
      slashFastFinalityAmount_: BigNumber;
      fastFinalityJailUntilBlock_: BigNumber;
    }
  >;

  precompileValidateFastFinalityAddress(
    overrides?: CallOverrides
  ): Promise<string>;

  setContract(
    contractType: BigNumberish,
    addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFastFinalitySlashingConfigs(
    slashAmount: BigNumberish,
    jailUntilBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  slashFastFinality(
    consensusAddr: string,
    voterPublicKey: BytesLike,
    targetBlockNumber: BigNumberish,
    targetBlockHash: [BytesLike, BytesLike],
    listOfPublicKey: [BytesLike[], BytesLike[]],
    aggregatedSignature: [BytesLike, BytesLike],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getFastFinalitySlashingConfigs(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        slashFastFinalityAmount_: BigNumber;
        fastFinalityJailUntilBlock_: BigNumber;
      }
    >;

    precompileValidateFastFinalityAddress(
      overrides?: CallOverrides
    ): Promise<string>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFastFinalitySlashingConfigs(
      slashAmount: BigNumberish,
      jailUntilBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    slashFastFinality(
      consensusAddr: string,
      voterPublicKey: BytesLike,
      targetBlockNumber: BigNumberish,
      targetBlockHash: [BytesLike, BytesLike],
      listOfPublicKey: [BytesLike[], BytesLike[]],
      aggregatedSignature: [BytesLike, BytesLike],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ContractUpdated(uint8,address)"(
      contractType?: BigNumberish | null,
      addr?: string | null
    ): ContractUpdatedEventFilter;
    ContractUpdated(
      contractType?: BigNumberish | null,
      addr?: string | null
    ): ContractUpdatedEventFilter;

    "FastFinalitySlashingConfigsUpdated(uint256,uint256)"(
      slashFastFinalityAmount?: null,
      fastFinalityJailUntilBlock?: null
    ): FastFinalitySlashingConfigsUpdatedEventFilter;
    FastFinalitySlashingConfigsUpdated(
      slashFastFinalityAmount?: null,
      fastFinalityJailUntilBlock?: null
    ): FastFinalitySlashingConfigsUpdatedEventFilter;

    "Slashed(address,uint8,uint256)"(
      validator?: string | null,
      slashType?: null,
      period?: null
    ): SlashedEventFilter;
    Slashed(
      validator?: string | null,
      slashType?: null,
      period?: null
    ): SlashedEventFilter;
  };

  estimateGas: {
    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFastFinalitySlashingConfigs(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    precompileValidateFastFinalityAddress(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFastFinalitySlashingConfigs(
      slashAmount: BigNumberish,
      jailUntilBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    slashFastFinality(
      consensusAddr: string,
      voterPublicKey: BytesLike,
      targetBlockNumber: BigNumberish,
      targetBlockHash: [BytesLike, BytesLike],
      listOfPublicKey: [BytesLike[], BytesLike[]],
      aggregatedSignature: [BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFastFinalitySlashingConfigs(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    precompileValidateFastFinalityAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFastFinalitySlashingConfigs(
      slashAmount: BigNumberish,
      jailUntilBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    slashFastFinality(
      consensusAddr: string,
      voterPublicKey: BytesLike,
      targetBlockNumber: BigNumberish,
      targetBlockHash: [BytesLike, BytesLike],
      listOfPublicKey: [BytesLike[], BytesLike[]],
      aggregatedSignature: [BytesLike, BytesLike],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
