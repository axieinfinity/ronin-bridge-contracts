/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IRoninGovernanceAdminInterface extends utils.Interface {
  functions: {
    "createEmergencyExitPoll(address,address,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createEmergencyExitPoll",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createEmergencyExitPoll",
    data: BytesLike
  ): Result;

  events: {
    "EmergencyExitPollApproved(bytes32)": EventFragment;
    "EmergencyExitPollCreated(bytes32,address,address,uint256,uint256)": EventFragment;
    "EmergencyExitPollExpired(bytes32)": EventFragment;
    "EmergencyExitPollVoted(bytes32,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EmergencyExitPollApproved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EmergencyExitPollCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EmergencyExitPollExpired"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EmergencyExitPollVoted"): EventFragment;
}

export type EmergencyExitPollApprovedEvent = TypedEvent<
  [string],
  { _voteHash: string }
>;

export type EmergencyExitPollApprovedEventFilter =
  TypedEventFilter<EmergencyExitPollApprovedEvent>;

export type EmergencyExitPollCreatedEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    _voteHash: string;
    _consensusAddr: string;
    _recipientAfterUnlockedFund: string;
    _requestedAt: BigNumber;
    _expiredAt: BigNumber;
  }
>;

export type EmergencyExitPollCreatedEventFilter =
  TypedEventFilter<EmergencyExitPollCreatedEvent>;

export type EmergencyExitPollExpiredEvent = TypedEvent<
  [string],
  { _voteHash: string }
>;

export type EmergencyExitPollExpiredEventFilter =
  TypedEventFilter<EmergencyExitPollExpiredEvent>;

export type EmergencyExitPollVotedEvent = TypedEvent<
  [string, string],
  { _voteHash: string; _voter: string }
>;

export type EmergencyExitPollVotedEventFilter =
  TypedEventFilter<EmergencyExitPollVotedEvent>;

export interface IRoninGovernanceAdmin extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IRoninGovernanceAdminInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createEmergencyExitPoll(
      _consensusAddr: string,
      _recipientAfterUnlockedFund: string,
      _requestedAt: BigNumberish,
      _expiredAt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  createEmergencyExitPoll(
    _consensusAddr: string,
    _recipientAfterUnlockedFund: string,
    _requestedAt: BigNumberish,
    _expiredAt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createEmergencyExitPoll(
      _consensusAddr: string,
      _recipientAfterUnlockedFund: string,
      _requestedAt: BigNumberish,
      _expiredAt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "EmergencyExitPollApproved(bytes32)"(
      _voteHash?: null
    ): EmergencyExitPollApprovedEventFilter;
    EmergencyExitPollApproved(
      _voteHash?: null
    ): EmergencyExitPollApprovedEventFilter;

    "EmergencyExitPollCreated(bytes32,address,address,uint256,uint256)"(
      _voteHash?: null,
      _consensusAddr?: null,
      _recipientAfterUnlockedFund?: null,
      _requestedAt?: null,
      _expiredAt?: null
    ): EmergencyExitPollCreatedEventFilter;
    EmergencyExitPollCreated(
      _voteHash?: null,
      _consensusAddr?: null,
      _recipientAfterUnlockedFund?: null,
      _requestedAt?: null,
      _expiredAt?: null
    ): EmergencyExitPollCreatedEventFilter;

    "EmergencyExitPollExpired(bytes32)"(
      _voteHash?: null
    ): EmergencyExitPollExpiredEventFilter;
    EmergencyExitPollExpired(
      _voteHash?: null
    ): EmergencyExitPollExpiredEventFilter;

    "EmergencyExitPollVoted(bytes32,address)"(
      _voteHash?: BytesLike | null,
      _voter?: string | null
    ): EmergencyExitPollVotedEventFilter;
    EmergencyExitPollVoted(
      _voteHash?: BytesLike | null,
      _voter?: string | null
    ): EmergencyExitPollVotedEventFilter;
  };

  estimateGas: {
    createEmergencyExitPoll(
      _consensusAddr: string,
      _recipientAfterUnlockedFund: string,
      _requestedAt: BigNumberish,
      _expiredAt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createEmergencyExitPoll(
      _consensusAddr: string,
      _recipientAfterUnlockedFund: string,
      _requestedAt: BigNumberish,
      _expiredAt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
