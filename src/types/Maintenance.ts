/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type ScheduleStruct = {
  from: BigNumberish;
  to: BigNumberish;
  lastUpdatedBlock: BigNumberish;
  requestTimestamp: BigNumberish;
};

export type ScheduleStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  from: BigNumber;
  to: BigNumber;
  lastUpdatedBlock: BigNumber;
  requestTimestamp: BigNumber;
};

export interface MaintenanceInterface extends utils.Interface {
  functions: {
    "cancelSchedule(address)": FunctionFragment;
    "checkCooldownEnds(address)": FunctionFragment;
    "checkMaintained(address,uint256)": FunctionFragment;
    "checkMaintainedInBlockRange(address,uint256,uint256)": FunctionFragment;
    "checkManyMaintained(address[],uint256)": FunctionFragment;
    "checkManyMaintainedInBlockRange(address[],uint256,uint256)": FunctionFragment;
    "checkScheduled(address)": FunctionFragment;
    "cooldownSecsToMaintain()": FunctionFragment;
    "getContract(uint8)": FunctionFragment;
    "getSchedule(address)": FunctionFragment;
    "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "initializeV2()": FunctionFragment;
    "maxMaintenanceDurationInBlock()": FunctionFragment;
    "maxOffsetToStartSchedule()": FunctionFragment;
    "maxSchedules()": FunctionFragment;
    "minMaintenanceDurationInBlock()": FunctionFragment;
    "minOffsetToStartSchedule()": FunctionFragment;
    "schedule(address,uint256,uint256)": FunctionFragment;
    "setContract(uint8,address)": FunctionFragment;
    "setMaintenanceConfig(uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "totalSchedules()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cancelSchedule",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "checkCooldownEnds",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "checkMaintained",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkMaintainedInBlockRange",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkManyMaintained",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkManyMaintainedInBlockRange",
    values: [string[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkScheduled",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "cooldownSecsToMaintain",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getContract",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getSchedule", values: [string]): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeV2",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxMaintenanceDurationInBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxOffsetToStartSchedule",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxSchedules",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "minMaintenanceDurationInBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "minOffsetToStartSchedule",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "schedule",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setContract",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaintenanceConfig",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSchedules",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "cancelSchedule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkCooldownEnds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkMaintained",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkMaintainedInBlockRange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkManyMaintained",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkManyMaintainedInBlockRange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkScheduled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cooldownSecsToMaintain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSchedule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializeV2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxMaintenanceDurationInBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxOffsetToStartSchedule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxSchedules",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "minMaintenanceDurationInBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "minOffsetToStartSchedule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "schedule", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaintenanceConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSchedules",
    data: BytesLike
  ): Result;

  events: {
    "ContractUpdated(uint8,address)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "MaintenanceConfigUpdated(uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "MaintenanceScheduleCancelled(address)": EventFragment;
    "MaintenanceScheduled(address,tuple)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ContractUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MaintenanceConfigUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "MaintenanceScheduleCancelled"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MaintenanceScheduled"): EventFragment;
}

export type ContractUpdatedEvent = TypedEvent<
  [number, string],
  { contractType: number; addr: string }
>;

export type ContractUpdatedEventFilter = TypedEventFilter<ContractUpdatedEvent>;

export type InitializedEvent = TypedEvent<[number], { version: number }>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export type MaintenanceConfigUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    minMaintenanceDurationInBlock: BigNumber;
    maxMaintenanceDurationInBlock: BigNumber;
    minOffsetToStartSchedule: BigNumber;
    maxOffsetToStartSchedule: BigNumber;
    maxSchedules: BigNumber;
    cooldownSecsToMaintain: BigNumber;
  }
>;

export type MaintenanceConfigUpdatedEventFilter =
  TypedEventFilter<MaintenanceConfigUpdatedEvent>;

export type MaintenanceScheduleCancelledEvent = TypedEvent<
  [string],
  { consensusAddr: string }
>;

export type MaintenanceScheduleCancelledEventFilter =
  TypedEventFilter<MaintenanceScheduleCancelledEvent>;

export type MaintenanceScheduledEvent = TypedEvent<
  [string, ScheduleStructOutput],
  { consensusAddr: string; arg1: ScheduleStructOutput }
>;

export type MaintenanceScheduledEventFilter =
  TypedEventFilter<MaintenanceScheduledEvent>;

export interface Maintenance extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MaintenanceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    cancelSchedule(
      _consensusAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    checkCooldownEnds(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    checkMaintained(
      _consensusAddr: string,
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    checkMaintainedInBlockRange(
      _consensusAddr: string,
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    checkManyMaintained(
      _addrList: string[],
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean[]] & { _resList: boolean[] }>;

    checkManyMaintainedInBlockRange(
      _addrList: string[],
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean[]] & { _resList: boolean[] }>;

    checkScheduled(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    cooldownSecsToMaintain(overrides?: CallOverrides): Promise<[BigNumber]>;

    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { contract_: string }>;

    getSchedule(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<[ScheduleStructOutput]>;

    initialize(
      __validatorContract: string,
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializeV2(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    maxMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    maxOffsetToStartSchedule(overrides?: CallOverrides): Promise<[BigNumber]>;

    maxSchedules(overrides?: CallOverrides): Promise<[BigNumber]>;

    minMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    minOffsetToStartSchedule(overrides?: CallOverrides): Promise<[BigNumber]>;

    schedule(
      _consensusAddr: string,
      _startedAtBlock: BigNumberish,
      _endedAtBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaintenanceConfig(
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    totalSchedules(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _count: BigNumber }>;
  };

  cancelSchedule(
    _consensusAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  checkCooldownEnds(
    _consensusAddr: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  checkMaintained(
    _consensusAddr: string,
    _block: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  checkMaintainedInBlockRange(
    _consensusAddr: string,
    _fromBlock: BigNumberish,
    _toBlock: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  checkManyMaintained(
    _addrList: string[],
    _block: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  checkManyMaintainedInBlockRange(
    _addrList: string[],
    _fromBlock: BigNumberish,
    _toBlock: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  checkScheduled(
    _consensusAddr: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  cooldownSecsToMaintain(overrides?: CallOverrides): Promise<BigNumber>;

  getContract(
    contractType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getSchedule(
    _consensusAddr: string,
    overrides?: CallOverrides
  ): Promise<ScheduleStructOutput>;

  initialize(
    __validatorContract: string,
    _minMaintenanceDurationInBlock: BigNumberish,
    _maxMaintenanceDurationInBlock: BigNumberish,
    _minOffsetToStartSchedule: BigNumberish,
    _maxOffsetToStartSchedule: BigNumberish,
    _maxSchedules: BigNumberish,
    _cooldownSecsToMaintain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializeV2(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  maxMaintenanceDurationInBlock(overrides?: CallOverrides): Promise<BigNumber>;

  maxOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

  maxSchedules(overrides?: CallOverrides): Promise<BigNumber>;

  minMaintenanceDurationInBlock(overrides?: CallOverrides): Promise<BigNumber>;

  minOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

  schedule(
    _consensusAddr: string,
    _startedAtBlock: BigNumberish,
    _endedAtBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setContract(
    contractType: BigNumberish,
    addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaintenanceConfig(
    _minMaintenanceDurationInBlock: BigNumberish,
    _maxMaintenanceDurationInBlock: BigNumberish,
    _minOffsetToStartSchedule: BigNumberish,
    _maxOffsetToStartSchedule: BigNumberish,
    _maxSchedules: BigNumberish,
    _cooldownSecsToMaintain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  totalSchedules(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    cancelSchedule(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    checkCooldownEnds(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    checkMaintained(
      _consensusAddr: string,
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    checkMaintainedInBlockRange(
      _consensusAddr: string,
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    checkManyMaintained(
      _addrList: string[],
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    checkManyMaintainedInBlockRange(
      _addrList: string[],
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    checkScheduled(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    cooldownSecsToMaintain(overrides?: CallOverrides): Promise<BigNumber>;

    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getSchedule(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<ScheduleStructOutput>;

    initialize(
      __validatorContract: string,
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initializeV2(overrides?: CallOverrides): Promise<void>;

    maxMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

    maxSchedules(overrides?: CallOverrides): Promise<BigNumber>;

    minMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    minOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

    schedule(
      _consensusAddr: string,
      _startedAtBlock: BigNumberish,
      _endedAtBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaintenanceConfig(
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    totalSchedules(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "ContractUpdated(uint8,address)"(
      contractType?: BigNumberish | null,
      addr?: string | null
    ): ContractUpdatedEventFilter;
    ContractUpdated(
      contractType?: BigNumberish | null,
      addr?: string | null
    ): ContractUpdatedEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "MaintenanceConfigUpdated(uint256,uint256,uint256,uint256,uint256,uint256)"(
      minMaintenanceDurationInBlock?: null,
      maxMaintenanceDurationInBlock?: null,
      minOffsetToStartSchedule?: null,
      maxOffsetToStartSchedule?: null,
      maxSchedules?: null,
      cooldownSecsToMaintain?: null
    ): MaintenanceConfigUpdatedEventFilter;
    MaintenanceConfigUpdated(
      minMaintenanceDurationInBlock?: null,
      maxMaintenanceDurationInBlock?: null,
      minOffsetToStartSchedule?: null,
      maxOffsetToStartSchedule?: null,
      maxSchedules?: null,
      cooldownSecsToMaintain?: null
    ): MaintenanceConfigUpdatedEventFilter;

    "MaintenanceScheduleCancelled(address)"(
      consensusAddr?: string | null
    ): MaintenanceScheduleCancelledEventFilter;
    MaintenanceScheduleCancelled(
      consensusAddr?: string | null
    ): MaintenanceScheduleCancelledEventFilter;

    "MaintenanceScheduled(address,tuple)"(
      consensusAddr?: string | null,
      undefined?: null
    ): MaintenanceScheduledEventFilter;
    MaintenanceScheduled(
      consensusAddr?: string | null,
      undefined?: null
    ): MaintenanceScheduledEventFilter;
  };

  estimateGas: {
    cancelSchedule(
      _consensusAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    checkCooldownEnds(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkMaintained(
      _consensusAddr: string,
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkMaintainedInBlockRange(
      _consensusAddr: string,
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkManyMaintained(
      _addrList: string[],
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkManyMaintainedInBlockRange(
      _addrList: string[],
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkScheduled(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    cooldownSecsToMaintain(overrides?: CallOverrides): Promise<BigNumber>;

    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSchedule(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      __validatorContract: string,
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializeV2(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    maxMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

    maxSchedules(overrides?: CallOverrides): Promise<BigNumber>;

    minMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    minOffsetToStartSchedule(overrides?: CallOverrides): Promise<BigNumber>;

    schedule(
      _consensusAddr: string,
      _startedAtBlock: BigNumberish,
      _endedAtBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaintenanceConfig(
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    totalSchedules(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    cancelSchedule(
      _consensusAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    checkCooldownEnds(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkMaintained(
      _consensusAddr: string,
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkMaintainedInBlockRange(
      _consensusAddr: string,
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkManyMaintained(
      _addrList: string[],
      _block: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkManyMaintainedInBlockRange(
      _addrList: string[],
      _fromBlock: BigNumberish,
      _toBlock: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkScheduled(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cooldownSecsToMaintain(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContract(
      contractType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSchedule(
      _consensusAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      __validatorContract: string,
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializeV2(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    maxMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxOffsetToStartSchedule(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxSchedules(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    minMaintenanceDurationInBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    minOffsetToStartSchedule(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    schedule(
      _consensusAddr: string,
      _startedAtBlock: BigNumberish,
      _endedAtBlock: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setContract(
      contractType: BigNumberish,
      addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaintenanceConfig(
      _minMaintenanceDurationInBlock: BigNumberish,
      _maxMaintenanceDurationInBlock: BigNumberish,
      _minOffsetToStartSchedule: BigNumberish,
      _maxOffsetToStartSchedule: BigNumberish,
      _maxSchedules: BigNumberish,
      _cooldownSecsToMaintain: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    totalSchedules(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
