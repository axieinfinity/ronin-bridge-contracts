/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPaymentFallbackExpensive,
  MockPaymentFallbackExpensiveInterface,
} from "../MockPaymentFallbackExpensive";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "array",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015561012e806100506000396000f3fe60806040526004361060205760003560e01c806338d9419314609357600080fd5b36608e5760008054600181018255908052437f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015560405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b600080fd5b348015609e57600080fd5b5060ae60aa36600460e0565b60c0565b60405190815260200160405180910390f35b6000818154811060cf57600080fd5b600091825260209091200154905081565b60006020828403121560f157600080fd5b503591905056fea264697066735822122079a265d61d4a7b02a231a77d4fdc0fab8e0f3bee4abdd3a912ab53f9f635930164736f6c63430008110033";

type MockPaymentFallbackExpensiveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPaymentFallbackExpensiveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPaymentFallbackExpensive__factory extends ContractFactory {
  constructor(...args: MockPaymentFallbackExpensiveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPaymentFallbackExpensive> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockPaymentFallbackExpensive>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPaymentFallbackExpensive {
    return super.attach(address) as MockPaymentFallbackExpensive;
  }
  connect(signer: Signer): MockPaymentFallbackExpensive__factory {
    return super.connect(signer) as MockPaymentFallbackExpensive__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPaymentFallbackExpensiveInterface {
    return new utils.Interface(_abi) as MockPaymentFallbackExpensiveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPaymentFallbackExpensive {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPaymentFallbackExpensive;
  }
}
