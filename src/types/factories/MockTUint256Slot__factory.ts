/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockTUint256Slot,
  MockTUint256SlotInterface,
} from "../MockTUint256Slot";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "addAssignCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "addAssignPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "addCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "addPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "divCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "divPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "mulCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "mulPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "postDecrementCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "postDecrementPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "postIncrementCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "postIncrementPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "preDecrementCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "preDecrementPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "preIncrementCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "preIncrementPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "setCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "setPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "subAssignCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "subAssignPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "subCustomSlot",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "subPrimitive",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aa9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806360211188116100c3578063d083620e1161007c578063d083620e14610278578063d78ad1271461028b578063e0ae795414610293578063e1c42e5f146102a9578063ed6d8d3a146102b1578063ee63467a146102c457600080fd5b8063602111881461021157806375c054ed1461022457806376824deb14610237578063a0fae9ac1461023f578063c8dd6ad514610252578063c8f054ca1461026557600080fd5b80632e79041c116101155780632e79041c146101c057806338ac8c46146101d3578063393b11be146101db5780634889d66f146101e35780634902b163146101eb57806357b1d5fa146101fe57600080fd5b806304d806b41461015d57806306bed1ff1461017757806311710ee41461018a5780631633b1891461019d5780631b224829146101b05780632d2ca5bb146101b8575b600080fd5b6101656102cc565b60405190815260200160405180910390f35b610165610185366004610967565b6102e4565b610165610198366004610967565b61034d565b6101656101ab366004610967565b61036c565b610165610425565b610165610483565b6101656101ce366004610967565b6104dc565b61016561053f565b610165610559565b610165610569565b6101656101f9366004610967565b6105c2565b61016561020c366004610967565b6105d2565b61016561021f366004610967565b610635565b610165610232366004610967565b610698565b6101656106a8565b61016561024d366004610967565b6106e6565b610165610260366004610967565b6106f6565b610165610273366004610967565b610759565b610165610286366004610967565b610769565b6101656107cc565b6101656102a1366004610967565b600081905590565b6101656107db565b6101656102bf366004610967565b610834565b600054610165565b6000805481806102db83610996565b91905055905090565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161032391906109af565b6040516020818303038152906040528051906020012061084790919063ffffffff16565b92915050565b60008160008082825461036091906109fd565b91829055509392505050565b60006103cf826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b8152506040516020016103ab91906109af565b6040516020818303038152906040528051906020012061087990919063ffffffff16565b6103476040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161040b91906109af565b604051602081830303815290604052805190602001205490565b600061047e6040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161046391906109af565b6040516020818303038152906040528051906020012061087d565b905090565b600061047e6040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b8152506040516020016104c191906109af565b6040516020818303038152906040528051906020012061088a565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161051b91906109af565b604051602081830303815290604052805190602001206108aa90919063ffffffff16565b6000806000815461054f90610996565b9182905550919050565b6000806000815461054f90610a10565b600061047e6040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b8152506040516020016105a791906109af565b604051602081830303815290604052805190602001206108d0565b60008160005461034791906109fd565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161061191906109af565b604051602081830303815290604052805190602001206108eb90919063ffffffff16565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161067491906109af565b6040516020818303038152906040528051906020012061090a90919063ffffffff16565b6000816000546103479190610a27565b600061047e6040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161040b91906109af565b6000816000546103479190610a49565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161073591906109af565b6040516020818303038152906040528051906020012061093390919063ffffffff16565b6000816000546103479190610a60565b6000610347826040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b8152506040516020016107a891906109af565b6040516020818303038152906040528051906020012061094a90919063ffffffff16565b6000805481806102db83610a10565b600061047e6040518060400160405260108152806020016f135bd8dad5155a5b9d0c8d4d94db1bdd60821b81525060405160200161081991906109af565b6040516020818303038152906040528051906020012061095a565b6000816000808282546103609190610a60565b600082548015610872578281029150808204831461087257634e487b7160005260116020526024601cfd5b5092915050565b9055565b6000610347826001610933565b6000610894825490565b90506108a5826108796001846109fd565b919050565b60008254826108c657634e487b7160005260126020526024601cfd5b9190910492915050565b60006108da825490565b90506108a582610879836001610a60565b815481018181101561034757634e487b7160005260116020526024601cfd5b600082548281101561092957634e487b7160005260116020526024601cfd5b9190910392915050565b600061034783610943858561090a565b9250829055565b60006103478361094385856108eb565b600061034782600161094a565b60006020828403121561097957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016109a8576109a8610980565b5060010190565b600060208083528351808285015260005b818110156109dc578581018301518582016040015282016109c0565b506000604082860101526040601f19601f8301168501019250505092915050565b8181038181111561034757610347610980565b600081610a1f57610a1f610980565b506000190190565b600082610a4457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761034757610347610980565b808201808211156103475761034761098056fea2646970667358221220ac66387b00652cd3b304061fe440f83eb1815670ccda101afb2c1b2b58b8953064736f6c63430008110033";

type MockTUint256SlotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTUint256SlotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTUint256Slot__factory extends ContractFactory {
  constructor(...args: MockTUint256SlotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockTUint256Slot> {
    return super.deploy(overrides || {}) as Promise<MockTUint256Slot>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockTUint256Slot {
    return super.attach(address) as MockTUint256Slot;
  }
  connect(signer: Signer): MockTUint256Slot__factory {
    return super.connect(signer) as MockTUint256Slot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTUint256SlotInterface {
    return new utils.Interface(_abi) as MockTUint256SlotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTUint256Slot {
    return new Contract(address, _abi, signerOrProvider) as MockTUint256Slot;
  }
}
