/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockConditionalImplementControl,
  MockConditionalImplementControlInterface,
} from "../MockConditionalImplementControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "proxyStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "prevImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "upgradedAtBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrDelegateFromUnknownOrigin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrDuplicated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrOnlySelfCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NEW_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PREV_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_STORAGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADED_AT_BLOCK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selfUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "args",
        type: "bytes[]",
      },
    ],
    name: "setCallDatas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200108038038062001080833981016040819052620000359162000291565b83838362000043816200018e565b6200004e826200018e565b62000059836200018e565b60408051600380825260808201909252600091602082016060803683370190505090508381600081518110620000935762000093620002e3565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600181518110620000ca57620000ca620002e3565b60200260200101906001600160a01b031690816001600160a01b0316815250508181600281518110620001015762000101620002e3565b60200260200101906001600160a01b031690816001600160a01b0316815250506200013781620001c960201b620003e11760201c565b156200016957604051630d697db160e11b81526001600160e01b03196000351660048201526024015b60405180910390fd5b506001600160a01b03928316608052821660a0521660c05260e05250620002f9915050565b806001600160a01b03163b600003620001c657604051630bfc64a360e21b81526001600160a01b038216600482015260240162000160565b50565b60008151600003620001dd57506000919050565b60005b60018351038110156200026b57600181015b83518110156200026157838181518110620002115762000211620002e3565b60200260200101516001600160a01b0316848381518110620002375762000237620002e3565b60200260200101516001600160a01b03160362000258575060019392505050565b600101620001f2565b50600101620001e0565b50600092915050565b80516001600160a01b03811681146200028c57600080fd5b919050565b60008060008060808587031215620002a857600080fd5b620002b38562000274565b9350620002c36020860162000274565b9250620002d36040860162000274565b6060959095015193969295505050565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c05160e051610d1d620003636000396000818161013501528181610484015261057801526000818160b001526104ad0152600081816101010152818161034201526104d20152600081816101ec0152818161021901526107300152610d1d6000f3fe60806040526004361061007f5760003560e01c80638f61eea61161004e5780638f61eea614610185578063d39f5677146101a5578063de981f1b146101ba578063f89360c2146101da57610096565b8063014fdae61461009e57806330b53157146100ef5780633e0a90ca14610123578063865e6fd31461016557610096565b366100965761008c61020e565b610094610260565b005b61008c61020e565b3480156100aa57600080fd5b506100d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fb57600080fd5b506100d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561012f57600080fd5b506101577f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e6565b34801561017157600080fd5b50610094610180366004610918565b61027c565b34801561019157600080fd5b506100946101a036600461095b565b61029b565b3480156101b157600080fd5b5061009461032d565b3480156101c657600080fd5b506100d26101d53660046109d0565b610366565b3480156101e657600080fd5b506100d27f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461025e5760405163145be24560e01b81523060048201526024015b60405180910390fd5b565b600061027261026d610480565b6104f4565b9050805160208201f35b6102846105ee565b61028d81610648565b6102978282610681565b5050565b6102a36105ee565b6102ab61020e565b7f330d87be17f5b23d41285647e0e9b0e7124a778feb3f952590ed6a023ae026338160005b8181101561032657828585838181106102eb576102eb6109f2565b90506020028101906102fd9190610a08565b8254600181018455600093845260209093209092019161031d9183610af1565b506001016102d0565b5050505050565b61033561020e565b61033d610725565b61025e7f000000000000000000000000000000000000000000000000000000000000000061077c565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f81111561039d5761039d610bb1565b60ff1681526020810191909152604001600020546001600160a01b03169050806103dc578160405163409140df60e11b81526004016102559190610bc7565b919050565b600081516000036103f457506000919050565b60005b600183510381101561047757600181015b835181101561046e57838181518110610423576104236109f2565b60200260200101516001600160a01b0316848381518110610446576104466109f2565b60200260200101516001600160a01b031603610466575060019392505050565b600101610408565b506001016103f7565b50600092915050565b60007f00000000000000000000000000000000000000000000000000000000000000004310156104cf57507f000000000000000000000000000000000000000000000000000000000000000090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6060600080836001600160a01b0316600036604051610514929190610be1565b600060405180830381855af49150503d806000811461054f576040519150601f19603f3d011682016040523d82523d6000602084013e610554565b606091505b5090925090506105738215156001600160e01b031960003516836108c3565b9150507f000000000000000000000000000000000000000000000000000000000000000043106103dc573063d39f567761c3506040518263ffffffff1660e01b8152600401600060405180830381600088803b1580156105d257600080fd5b5087f1935050505080156105e4575060015b156103dc57919050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b0316331461025e576000356001600160e01b0319166001604051620f948f60ea1b8152600401610255929190610bf1565b806001600160a01b03163b60000361067e57604051630bfc64a360e21b81526001600160a01b0382166004820152602401610255565b50565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f8111156106b7576106b7610bb1565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f8111156106f8576106f8610bb1565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461025e576040516307337e1960e41b81526001600160e01b0319600035166004820152602401610255565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8190556040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a27f330d87be17f5b23d41285647e0e9b0e7124a778feb3f952590ed6a023ae02633805460006060815b838110156108bb57856001600160a01b0316858281548110610821576108216109f2565b906000526020600020016040516108389190610c1f565b600060405180830381855af49150503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b5080935081945050506108b3858281548110610896576108966109f2565b906000526020600020016108a990610c95565b84151590846108c3565b6001016107fd565b505050505050565b6001600160e01b0319600035168361090357815180156108e4578060208401fd5b50604051638e3eda2b81528160208201528360408201526044601c8201fd5b50505050565b8035601081106103dc57600080fd5b6000806040838503121561092b57600080fd5b61093483610909565b915060208301356001600160a01b038116811461095057600080fd5b809150509250929050565b6000806020838503121561096e57600080fd5b823567ffffffffffffffff8082111561098657600080fd5b818501915085601f83011261099a57600080fd5b8135818111156109a957600080fd5b8660208260051b85010111156109be57600080fd5b60209290920196919550909350505050565b6000602082840312156109e257600080fd5b6109eb82610909565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610a1f57600080fd5b83018035915067ffffffffffffffff821115610a3a57600080fd5b602001915036819003821315610a4f57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610a8057607f821691505b602082108103610aa057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610aec57600081815260208120601f850160051c81016020861015610acd5750805b601f850160051c820191505b818110156108bb57828155600101610ad9565b505050565b67ffffffffffffffff831115610b0957610b09610a56565b610b1d83610b178354610a6c565b83610aa6565b6000601f841160018114610b515760008515610b395750838201355b600019600387901b1c1916600186901b178355610326565b600083815260209020601f19861690835b82811015610b825786850135825560209485019460019092019101610b62565b5086821015610b9f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160108310610bdb57610bdb610bb1565b91905290565b8183823760009101908152919050565b6001600160e01b03198316815260408101600b8310610c1257610c12610bb1565b8260208301529392505050565b6000808354610c2d81610a6c565b60018281168015610c455760018114610c5a57610c89565b60ff1984168752821515830287019450610c89565b8760005260208060002060005b85811015610c805781548a820152908401908201610c67565b50505082870194505b50929695505050505050565b6000610ca18254610a6c565b82601f821115610cb75783600052602060002090505b546001600160e01b031980821693506004831015610cdf5780818460040360031b1b83161693505b50505091905056fea2646970667358221220c1d324d345ea00bf7fafbbe28535d40cac864790d7614da7b9de38fd4149b90664736f6c63430008110033";

type MockConditionalImplementControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockConditionalImplementControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockConditionalImplementControl__factory extends ContractFactory {
  constructor(...args: MockConditionalImplementControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    proxyStorage: string,
    prevImpl: string,
    newImpl: string,
    upgradedAtBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockConditionalImplementControl> {
    return super.deploy(
      proxyStorage,
      prevImpl,
      newImpl,
      upgradedAtBlock,
      overrides || {}
    ) as Promise<MockConditionalImplementControl>;
  }
  getDeployTransaction(
    proxyStorage: string,
    prevImpl: string,
    newImpl: string,
    upgradedAtBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      proxyStorage,
      prevImpl,
      newImpl,
      upgradedAtBlock,
      overrides || {}
    );
  }
  attach(address: string): MockConditionalImplementControl {
    return super.attach(address) as MockConditionalImplementControl;
  }
  connect(signer: Signer): MockConditionalImplementControl__factory {
    return super.connect(signer) as MockConditionalImplementControl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockConditionalImplementControlInterface {
    return new utils.Interface(
      _abi
    ) as MockConditionalImplementControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockConditionalImplementControl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockConditionalImplementControl;
  }
}
