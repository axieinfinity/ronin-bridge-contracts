/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeSlash, BridgeSlashInterface } from "../BridgeSlash";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum ContractType",
        name: "expectedContractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "actual",
        type: "address",
      },
    ],
    name: "ErrUnexpectedInternalCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BridgeTrackingIncorrectlyResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
    ],
    name: "RemovalRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_VOTE_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_DURATION_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_1_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_2_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "execSlashBridgeOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getAddedPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "addedPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPenaltyDurations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "penaltyDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
    ],
    name: "getSlashTier",
    outputs: [
      {
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getSlashUntilPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "untilPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeManagerContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeTrackingContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "dposGA",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeREP2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currentBridgeOperator",
        type: "address",
      },
      {
        internalType: "address",
        name: "newBridgeOperator",
        type: "address",
      },
    ],
    name: "onBridgeOperatorUpdated",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "addeds",
        type: "bool[]",
      },
    ],
    name: "onBridgeOperatorsAdded",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    name: "onBridgeOperatorsRemoved",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261000c610011565b6100d1565b600054610100900460ff161561007d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100cf576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611603806100e06000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80639c2f4459116100a2578063ddc3f7f611610071578063ddc3f7f614610213578063de981f1b1461021b578063f8c8765e14610246578063f9f6087314610259578063fbb2f1941461026157600080fd5b80639c2f4459146101dd578063c48549de146101e5578063c9631a12146101f8578063d1e1f2f81461020b57600080fd5b80635311153b116100de5780635311153b146101755780635ebae8a0146101885780636dda4408146101b4578063865e6fd3146101ca57600080fd5b806301ffc9a7146101105780631288810a146101385780633b154455146101585780634dca592514610162575b600080fd5b61012361011e366004610f49565b610281565b60405190151581526020015b60405180910390f35b61014b610146366004610fbf565b6102b8565b60405161012f9190611001565b6101606103a0565b005b610160610170366004611132565b610480565b61014b610183366004610fbf565b61070e565b61019b61019636600461120d565b6107e7565b6040516001600160e01b0319909116815260200161012f565b6101bc600181565b60405190815260200161012f565b6101606101d83660046112eb565b610964565b6101bc603281565b61019b6101f336600461131e565b610983565b61019b61020636600461138a565b6109a2565b6101bc600581565b6101bc601e81565b61022e6102293660046113a6565b610a21565b6040516001600160a01b03909116815260200161012f565b6101606102543660046113c1565b610a9c565b61014b610bdb565b61027461026f366004611415565b610bea565b60405161012f919061144d565b60006001600160e01b031982166314d72edb60e21b14806102b257506001600160e01b031982166301ffc9a760e01b145b92915050565b6060818067ffffffffffffffff8111156102d4576102d4611045565b6040519080825280602002602001820160405280156102fd578160200160208202803683370190505b5091506000805160206115ae83398151915260005b828110156103975781600087878481811061032f5761032f611467565b9050602002016020810190610344919061147d565b6001600160a01b031681526020810191909152604001600020548451600160801b9091046001600160801b03169085908390811061038457610384611467565b6020908102919091010152600101610312565b50505092915050565b60046103ab81610bfd565b600019600154146103f85760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9034b734ba103932b8101960711b60448201526064015b60405180910390fd5b6104026008610a21565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611498565b61046e9060016114c7565b60015561047d60046000610c49565b50565b600361048b81610bfd565b816001548110610705578360328111156107035786518851146104cf576040516306b5667560e21b81526001600160e01b03196000351660048201526024016103ef565b875115610703576104e1868689610ced565b610513576040517f64ba7143ea5a17abea37667aa9ae137e3afba5033c5f504770c02829c128189c90600090a1610703565b600061051d610d6a565b604080518082019091526000808252602082018190529192506000805160206115ae833981519152918080805b8e518110156106fb578e818151811061056557610565611467565b6020908102919091018101516001600160a01b03811660009081528883526040908190208151808301909252546001600160801b038082168352600160801b90910416928101839052965093508b11156106f3576105dc8e82815181106105ce576105ce611467565b60200260200101518d610dd5565b91506105f7828c87600001516001600160801b03168a610e27565b9350610603848c610e7e565b15610649576040516001600160801b0394506001600160a01b038416908c907fb32a150b9737190a456d8b2b81dd7d592a799ab2933ea494e44351acd41f835d90600090a35b600082600281111561065d5761065d611437565b146106f3576001600160801b0384146106c1578a836001600160a01b031683600281111561068d5761068d611437565b6040518781527f14441e950b7f9ed959e16b2405dd1a9d163efd5d85027b222dcf78b902a00d759060200160405180910390a45b6001600160a01b038316600090815260208790526040902080546001600160801b0319166001600160801b0386161790555b60010161054a565b505050505050505b505b50505050505050565b6060818067ffffffffffffffff81111561072a5761072a611045565b604051908082528060200260200182016040528015610753578160200160208202803683370190505b5091506000805160206115ae83398151915260005b828110156103975781600087878481811061078557610785611467565b905060200201602081019061079a919061147d565b6001600160a01b0316815260208101919091526040016000205484516001600160801b03909116908590839081106107d4576107d4611467565b6020908102919091010152600101610768565b6000600b6107f481610bfd565b825184908114610825576040516306b5667560e21b81526001600160e01b03196000351660048201526024016103ef565b8060000361083d57506302f5d74560e51b915061095c565b6000805160206115ae83398151915260006108586008610a21565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190611498565b905060005b8381101561094d578681815181106108d8576108d8611467565b60200260200101511561094557818360008b8b858181106108fb576108fb611467565b9050602002016020810190610910919061147d565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b0292169190911790555b6001016108be565b506302f5d74560e51b94505050505b509392505050565b61096c610ea0565b61097581610efc565b61097f8282610c49565b5050565b6000600b61099081610bfd565b506302f5d74560e51b95945050505050565b6000600b6109af81610bfd565b50506001600160a01b0391821660008181526000805160206115ae8339815191526020526040808220939094168152928320825481546001600160801b0319166001600160801b0391821690811783558454600160801b908190049092169091021790558252556364b18d0960e11b90565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610a5857610a58611437565b60ff1681526020810191909152604001600020546001600160a01b0316905080610a97578160405163409140df60e11b81526004016103ef91906114ee565b919050565b600054610100900460ff1615808015610abc5750600054600160ff909116105b80610ad65750303b158015610ad6575060005460ff166001145b610b395760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103ef565b6000805460ff191660011790558015610b5c576000805461ff0019166101001790555b610b67600886610c49565b610b72600b85610c49565b610b7d600384610c49565b610b88600483610c49565b6000196001558015610bd4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6060610be5610d6a565b905090565b6000610bf68383610dd5565b9392505050565b610c0681610a21565b6001600160a01b0316336001600160a01b03161461047d576000356001600160e01b03191681336040516320e0f98d60e21b81526004016103ef939291906114fc565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f811115610c7f57610c7f611437565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f811115610cc057610cc0611437565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b8051600190600090815b81811015610d525785858281518110610d1257610d12611467565b60200260200101511115610d295760009350610d52565b848181518110610d3b57610d3b611467565b602002602001015183019250806001019050610cf7565b50828015610d605750858211155b9695505050505050565b604080516003808252608082019092526060916020820183803683370190505090506001818160ff1681518110610da357610da3611467565b6020908102919091010152600581600260ff1681518110610dc657610dc6611467565b60200260200101818152505090565b60008082612710610de68683611533565b610df09190611546565b610dfa919061155d565b9050610bb88111610e1c576103e88111610e15576000610e1f565b6001610e1f565b60025b949350505050565b6000610e3d610e37600186611533565b84610f32565b82866002811115610e5057610e50611437565b60ff1681518110610e6357610e63611467565b6020026020010151610e7591906114c7565b95945050505050565b6000601e610e8d600184611533565b610e979085611533565b10159392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314610efa576000356001600160e01b0319166001604051620f948f60ea1b81526004016103ef92919061157f565b565b806001600160a01b03163b60000361047d57604051630bfc64a360e21b81526001600160a01b03821660048201526024016103ef565b600081831015610f425781610bf6565b5090919050565b600060208284031215610f5b57600080fd5b81356001600160e01b031981168114610bf657600080fd5b60008083601f840112610f8557600080fd5b50813567ffffffffffffffff811115610f9d57600080fd5b6020830191508360208260051b8501011115610fb857600080fd5b9250929050565b60008060208385031215610fd257600080fd5b823567ffffffffffffffff811115610fe957600080fd5b610ff585828601610f73565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156110395783518352928401929184019160010161101d565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561108457611084611045565b604052919050565b600067ffffffffffffffff8211156110a6576110a6611045565b5060051b60200190565b80356001600160a01b0381168114610a9757600080fd5b600082601f8301126110d857600080fd5b813560206110ed6110e88361108c565b61105b565b82815260059290921b8401810191818101908684111561110c57600080fd5b8286015b848110156111275780358352918301918301611110565b509695505050505050565b600080600080600060a0868803121561114a57600080fd5b853567ffffffffffffffff8082111561116257600080fd5b818801915088601f83011261117657600080fd5b813560206111866110e88361108c565b82815260059290921b8401810191818101908c8411156111a557600080fd5b948201945b838610156111ca576111bb866110b0565b825294820194908201906111aa565b995050890135925050808211156111e057600080fd5b506111ed888289016110c7565b959895975050505060408401359360608101359360809091013592509050565b60008060006040848603121561122257600080fd5b833567ffffffffffffffff8082111561123a57600080fd5b61124687838801610f73565b909550935060209150858201358181111561126057600080fd5b86019050601f8101871361127357600080fd5b80356112816110e88261108c565b81815260059190911b820183019083810190898311156112a057600080fd5b928401925b828410156112cd57833580151581146112be5760008081fd5b825292840192908401906112a5565b80955050505050509250925092565b803560108110610a9757600080fd5b600080604083850312156112fe57600080fd5b611307836112dc565b9150611315602084016110b0565b90509250929050565b6000806000806040858703121561133457600080fd5b843567ffffffffffffffff8082111561134c57600080fd5b61135888838901610f73565b9096509450602087013591508082111561137157600080fd5b5061137e87828801610f73565b95989497509550505050565b6000806040838503121561139d57600080fd5b611307836110b0565b6000602082840312156113b857600080fd5b610bf6826112dc565b600080600080608085870312156113d757600080fd5b6113e0856110b0565b93506113ee602086016110b0565b92506113fc604086016110b0565b915061140a606086016110b0565b905092959194509250565b6000806040838503121561142857600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b602081016003831061146157611461611437565b91905290565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561148f57600080fd5b610bf6826110b0565b6000602082840312156114aa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102b2576102b26114b1565b601081106114ea576114ea611437565b9052565b602081016102b282846114da565b6001600160e01b0319841681526060810161151a60208301856114da565b6001600160a01b03929092166040919091015292915050565b818103818111156102b2576102b26114b1565b80820281158282048414176102b2576102b26114b1565b60008261157a57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b03198316815260408101600b83106115a0576115a0611437565b826020830152939250505056fed08d185790a07c7b9b721e2713c8580010a57f31c72c16f6e80b831d0ee45bfea2646970667358221220d309e2200fb289973cd7a754ac7d8ab0fdb577453b0bf366b6e9093fa0493c3864736f6c63430008110033";

type BridgeSlashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeSlashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeSlash__factory extends ContractFactory {
  constructor(...args: BridgeSlashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<BridgeSlash> {
    return super.deploy(overrides || {}) as Promise<BridgeSlash>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeSlash {
    return super.attach(address) as BridgeSlash;
  }
  connect(signer: Signer): BridgeSlash__factory {
    return super.connect(signer) as BridgeSlash__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeSlashInterface {
    return new utils.Interface(_abi) as BridgeSlashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeSlash {
    return new Contract(address, _abi, signerOrProvider) as BridgeSlash;
  }
}
