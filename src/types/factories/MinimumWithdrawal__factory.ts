/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  MinimumWithdrawal,
  MinimumWithdrawalInterface,
} from "../MinimumWithdrawal";

const _abi = [
  {
    inputs: [],
    name: "ErrEmptyArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrQueryForTooSmallQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "threshold",
        type: "uint256[]",
      },
    ],
    name: "MinimumThresholdsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minimumThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_thresholds",
        type: "uint256[]",
      },
    ],
    name: "setMinimumThresholds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class MinimumWithdrawal__factory {
  static readonly abi = _abi;
  static createInterface(): MinimumWithdrawalInterface {
    return new utils.Interface(_abi) as MinimumWithdrawalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimumWithdrawal {
    return new Contract(address, _abi, signerOrProvider) as MinimumWithdrawal;
  }
}
