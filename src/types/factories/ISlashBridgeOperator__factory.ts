/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISlashBridgeOperator,
  ISlashBridgeOperatorInterface,
} from "../ISlashBridgeOperator";

const _abi = [
  {
    inputs: [],
    name: "ErrEvidenceAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrInvalidRatios",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "missingVotesRatioTier1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "missingVotesRatioTier2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jailDurationForMissingVotesRatioTier2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skipBridgeOperatorSlashingThreshold",
        type: "uint256",
      },
    ],
    name: "BridgeOperatorSlashingConfigsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBaseSlash.SlashType",
        name: "slashType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consensusAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "execSlashBridgeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgeOperatorSlashingConfigs",
    outputs: [
      {
        internalType: "uint256",
        name: "_missingVotesRatioTier1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_missingVotesRatioTier2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_jailDurationForMissingVotesRatioTier2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_skipBridgeOperatorSlashingThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ratioTier1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ratioTier2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_jailDurationTier2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_skipSlashingThreshold",
        type: "uint256",
      },
    ],
    name: "setBridgeOperatorSlashingConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISlashBridgeOperator__factory {
  static readonly abi = _abi;
  static createInterface(): ISlashBridgeOperatorInterface {
    return new utils.Interface(_abi) as ISlashBridgeOperatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISlashBridgeOperator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISlashBridgeOperator;
  }
}
