/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IStakingVesting,
  IStakingVestingInterface,
} from "../IStakingVesting";

const _abi = [
  {
    inputs: [],
    name: "ErrBonusAlreadySent",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BlockProducerBonusPerBlockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockProducerAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeOperatorAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contractBalance",
        type: "uint256",
      },
    ],
    name: "BonusTransferFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockProducerAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeOperatorAmount",
        type: "uint256",
      },
    ],
    name: "BonusTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BridgeOperatorBonusPerBlockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FastFinalityRewardPercentageUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_block",
        type: "uint256",
      },
    ],
    name: "blockProducerBlockBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_block",
        type: "uint256",
      },
    ],
    name: "bridgeOperatorBlockBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fastFinalityRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBlockSendingBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveRON",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "forBlockProducer",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "forBridgeOperator",
        type: "bool",
      },
    ],
    name: "requestBonus",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "blockProducerBonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bridgeOperatorBonus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fastFinalityRewardPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setBlockProducerBonusPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setBridgeOperatorBonusPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setFastFinalityRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStakingVesting__factory {
  static readonly abi = _abi;
  static createInterface(): IStakingVestingInterface {
    return new utils.Interface(_abi) as IStakingVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStakingVesting {
    return new Contract(address, _abi, signerOrProvider) as IStakingVesting;
  }
}
