/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastFinalityTracking,
  FastFinalityTrackingInterface,
} from "../FastFinalityTracking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ErrCallerMustBeCoinbase",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrOncePerBlock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "getManyFinalityVoteCounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "voteCounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "voters",
        type: "address[]",
      },
    ],
    name: "recordFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61086a806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063468d24be1461005c578063865e6fd314610085578063c245db0f1461009a578063c4d66de8146100ad578063de981f1b146100c0575b600080fd5b61006f61006a366004610629565b6100eb565b60405161007c9190610675565b60405180910390f35b6100986100933660046106df565b6101c3565b005b6100986100a8366004610712565b6101e2565b6100986100bb366004610754565b610310565b6100d36100ce366004610776565b610429565b6040516001600160a01b03909116815260200161007c565b6060818067ffffffffffffffff81111561010757610107610791565b604051908082528060200260200182016040528015610130578160200160208202803683370190505b50915060005b818110156101ba5760008681526001602052604081209086868481811061015f5761015f6107a7565b90506020020160208101906101749190610754565b6001600160a01b03166001600160a01b03168152602001908152602001600020548382815181106101a7576101a76107a7565b6020908102919091010152600101610136565b50509392505050565b6101cb6104a4565b6101d481610500565b6101de8282610539565b5050565b600254431161020457604051636907b55f60e01b815260040160405180910390fd5b43600255334114610228576040516309f358fd60e01b815260040160405180910390fd5b60006102346008610429565b60405163a3d545f560e01b81524360048201526001600160a01b03919091169063a3d545f590602401602060405180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e91906107bd565b905060005b8281101561030a576000828152600160205260408120908585848181106102cc576102cc6107a7565b90506020020160208101906102e19190610754565b6001600160a01b03168152602081019190915260400160002080546001908101909155016102a3565b50505050565b600054610100900460ff16158080156103305750600054600160ff909116105b8061034a5750303b15801561034a575060005460ff166001145b6103b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103d5576000805461ff0019166101001790555b6103e0600883610539565b80156101de576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610460576104606107d6565b60ff1681526020810191909152604001600020546001600160a01b031690508061049f578160405163409140df60e11b81526004016103a991906107ec565b919050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b031633146104fe576000356001600160e01b0319166001604051620f948f60ea1b81526004016103a9929190610806565b565b806001600160a01b03163b60000361053657604051630bfc64a360e21b81526001600160a01b03821660048201526024016103a9565b50565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f81111561056f5761056f6107d6565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f8111156105b0576105b06107d6565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b60008083601f8401126105ef57600080fd5b50813567ffffffffffffffff81111561060757600080fd5b6020830191508360208260051b850101111561062257600080fd5b9250929050565b60008060006040848603121561063e57600080fd5b83359250602084013567ffffffffffffffff81111561065c57600080fd5b610668868287016105dd565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156106ad57835183529284019291840191600101610691565b50909695505050505050565b80356010811061049f57600080fd5b80356001600160a01b038116811461049f57600080fd5b600080604083850312156106f257600080fd5b6106fb836106b9565b9150610709602084016106c8565b90509250929050565b6000806020838503121561072557600080fd5b823567ffffffffffffffff81111561073c57600080fd5b610748858286016105dd565b90969095509350505050565b60006020828403121561076657600080fd5b61076f826106c8565b9392505050565b60006020828403121561078857600080fd5b61076f826106b9565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107cf57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6020810160108310610800576108006107d6565b91905290565b6001600160e01b03198316815260408101600b8310610827576108276107d6565b826020830152939250505056fea264697066735822122086a117c38a2ce7cd9749bbe9067cb6a6335401e50c6708b7f9be2dc4963972ae64736f6c63430008110033";

type FastFinalityTrackingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastFinalityTrackingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FastFinalityTracking__factory extends ContractFactory {
  constructor(...args: FastFinalityTrackingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastFinalityTracking> {
    return super.deploy(overrides || {}) as Promise<FastFinalityTracking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FastFinalityTracking {
    return super.attach(address) as FastFinalityTracking;
  }
  connect(signer: Signer): FastFinalityTracking__factory {
    return super.connect(signer) as FastFinalityTracking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastFinalityTrackingInterface {
    return new utils.Interface(_abi) as FastFinalityTrackingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastFinalityTracking {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FastFinalityTracking;
  }
}
