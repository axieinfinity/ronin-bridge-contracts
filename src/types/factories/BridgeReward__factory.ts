/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeReward, BridgeRewardInterface } from "../BridgeReward";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
    ],
    name: "ErrInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrInvalidArguments",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrRecipientRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRewardedPeriod",
        type: "uint256",
      },
    ],
    name: "ErrSyncTooFarPeriod",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrUnauthorizedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum ContractType",
        name: "expectedContractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "actual",
        type: "address",
      },
    ],
    name: "ErrUnexpectedInternalCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardScatterFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardScattered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPeriod",
        type: "uint256",
      },
    ],
    name: "BridgeRewardSyncTooFarPeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BridgeTrackingIncorrectlyResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceBefore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SafeReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "UpdatedRewardPerPeriod",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "execSyncReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRewardedPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRewardScattered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRewardToppedUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeManagerContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeTrackingContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeSlashContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "validatorSetContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "dposGA",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeREP2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveRON",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "setRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "periodLength",
        type: "uint256",
      },
    ],
    name: "syncReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405230608052610010610015565b6100d5565b600054610100900460ff16156100815760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100d3576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161178f6100f06000396000610ca0015261178f6000f3fe6080604052600436106100a75760003560e01c80638f7c34a2116100645780638f7c34a21461015357806395b6ef0c14610168578063a6bd67881461017b578063ad43663e1461019b578063de981f1b146101b0578063f5dbc4ee146101e857600080fd5b806324a2f579146100ac57806334087952146100ce5780633b154455146100f657806359f778df1461010b5780636bcb6fd614610113578063865e6fd314610133575b600080fd5b3480156100b857600080fd5b506100cc6100c73660046111d7565b6101fd565b005b3480156100da57600080fd5b506100e3610522565b6040519081526020015b60405180910390f35b34801561010257600080fd5b506100cc610551565b6100cc610644565b34801561011f57600080fd5b506100cc61012e36600461123c565b61064e565b34801561013f57600080fd5b506100cc61014e3660046112e7565b61078d565b34801561015f57600080fd5b506100e36107ac565b6100cc61017636600461131e565b6107c4565b34801561018757600080fd5b506100cc6101963660046111d7565b61092e565b3480156101a757600080fd5b506100e3610942565b3480156101bc57600080fd5b506101d06101cb366004611397565b61096c565b6040516001600160a01b0390911681526020016100ed565b3480156101f457600080fd5b506100e36109e7565b61020633610a11565b61023a576000356001600160e01b031916604051638f47e7e360e01b815260040161023191906113b9565b60405180910390fd5b60006102446107ac565b90506000610252600861096c565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa15801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b391906113ce565b90508181116102e3576000356001600160e01b03191660405163053265f160e01b815260040161023191906113b9565b806102ee84846113fd565b111561031b576000356001600160e01b03191660405163053265f160e01b815260040161023191906113b9565b61033360008051602061173a83398151915284610a8f565b506000610340600b61096c565b6001600160a01b0316639b19dbfd6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a5919081019061147b565b905060006103b3600361096c565b905060015b85811161051a5761051283836001600160a01b031663f67e815288876040518363ffffffff1660e01b81526004016103f192919061155e565b600060405180830381865afa15801561040e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610436919081019061157f565b60405163692f6a6360e11b8152600481018990526001600160a01b0386169063d25ed4c690602401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906113ce565b604051637153af9b60e11b8152600481018a90526001600160a01b0387169063e2a75f3690602401602060405180830381865afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050891906113ce565b9885019889610aa6565b6001016103b8565b505050505050565b600061054c7f3663384f6436b31a97d9c9a02f64ab8b73ead575c5b6224fa0800a6bd57f62f45490565b905090565b600461055c81610ba6565b6000196105676107ac565b146105a95760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9034b734ba103932b8101960711b6044820152606401610231565b61063560016105b8600861096c565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906113ce565b6106239190611605565b60008051602061173a83398151915255565b61064160046000610bf2565b50565b61064c610c96565b565b600361065981610ba6565b868514610687576000356001600160e01b0319166040516306b5667560e21b815260040161023191906113b9565b86156107835760006106976107ac565b9050806001018310156106cb576000356001600160e01b03191660405163053265f160e01b815260040161023191906113b9565b806001018311156106f957604051634e4e051560e01b81526004810184905260248101829052604401610231565b5061071160008051602061173a833981519152839055565b61078388888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250899250889150879050610aa6565b5050505050505050565b610795610d77565b61079e81610dd1565b6107a88282610bf2565b5050565b600061054c60008051602061173a8339815191525490565b600054610100900460ff16158080156107e45750600054600160ff909116105b806107fe5750303b1580156107fe575060005460ff166001145b6108615760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610231565b6000805460ff191660011790558015610884576000805461ff0019166101001790555b61088f600b88610bf2565b61089a600387610bf2565b6108a5600c86610bf2565b6108b0600885610bf2565b6108bb600484610bf2565b60001960008051602061173a833981519152556108d782610e07565b6108df610c96565b8015610925576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600b61093981610ba6565b6107a882610e07565b600061054c7f90f7d557245e5dd9485f463e58974fa7cdc93c0abbd0a1afebb8f9640ec739105490565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f8111156109a3576109a3611618565b60ff1681526020810191909152604001600020546001600160a01b03169050806109e2578160405163409140df60e11b81526004016102319190611642565b919050565b600061054c7f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c645490565b6000610a1d600b61096c565b604051635a02d57960e11b81526001600160a01b038481166004830152919091169063b405aaf290602401602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611650565b92915050565b6000610a8983610a9f8585610e66565b9250829055565b84516000610ab2610942565b90506000610abf88610e85565b90506000610ace87878a610f03565b90506000806000805b87811015610b6c57610b208589898f8581518110610af757610af7611672565b60200260200101518f8e8c8881518110610b1357610b13611672565b6020026020010151610f56565b909450925082610b305783610b33565b60005b610b3d90836113fd565b9150610b64898e8381518110610b5557610b55611672565b60200260200101518686610f77565b600101610ad7565b50610b977f3663384f6436b31a97d9c9a02f64ab8b73ead575c5b6224fa0800a6bd57f62f482610a8f565b50505050505050505050505050565b610baf8161096c565b6001600160a01b0316336001600160a01b031614610641576000356001600160e01b03191681336040516320e0f98d60e21b815260040161023193929190611688565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f811115610c2857610c28611618565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f811115610c6957610c69611618565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ced576000356001600160e01b031916604051638f47e7e360e01b815260040161023191906113b9565b337f7ae161a1f0ef2537f5ff1957021a50412e72abdc6a941a77d99361e91e7f3c3d610d377f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c645490565b604080519182523460208301520160405180910390a26106417f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c6434610a8f565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b0316331461064c576000356001600160e01b0319166001604051620f948f60ea1b81526004016102319291906116bf565b806001600160a01b03163b60000361064157604051630bfc64a360e21b81526001600160a01b0382166004820152602401610231565b610e307f90f7d557245e5dd9485f463e58974fa7cdc93c0abbd0a1afebb8f9640ec73910829055565b6040518181527f9b40b647582311cc8f5f7d27e7ce206d126605d1625b8299b7edaeefd869ef259060200160405180910390a150565b8154810181811015610a8957634e487b7160005260116020526024601cfd5b6060610e91600c61096c565b6001600160a01b0316635311153b836040518263ffffffff1660e01b8152600401610ebc91906116ed565b6000604051808303816000875af1158015610edb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a89919081019061157f565b600080610f118585856110cf565b905080610f42576040517f64ba7143ea5a17abea37667aa9ae137e3afba5033c5f504770c02829c128189c90600090a15b801580610f4d575084155b95945050505050565b600082821015610f69898989898961114c565b915097509795505050505050565b6001600160a01b03831660009081527f518cfd198acbffe95e740cfce1af28a3f7de51f0d784893d3d72c5cc59d7062a6020526040902081156110175782816001016000828254610fc891906113fd565b9091555050604080516001600160a01b03861681526020810185905286917fb3d061c3ef3991b0d4b09f4c8b551d137c3d1e014cf5326462d3d1f6a8dfb9c291015b60405180910390a26110c8565b8281600001600082825461102b91906113fd565b9091555061103d905084846000611177565b1561108357604080516001600160a01b03861681526020810185905286917fbab0baccb39371d4d5206b519fe58d21cae9cdd63a1d1b5146ecdf405fd93152910161100a565b604080516001600160a01b03861681526020810185905286917f74b217634c5a7790ce69770c5e35019970453d4da3973769e7d6cdb7ce6816a1910160405180910390a25b5050505050565b8051600190600090815b8181101561113457858582815181106110f4576110f4611672565b6020026020010151111561110b5760009350611134565b84818151811061111d5761111d611672565b6020026020010151830192508060010190506110d9565b508280156111425750858211155b9695505050505050565b60008561116d578161115e8486611700565b6111689190611717565b611142565b6111428585611717565b6000836001600160a01b0316838390604051600060405180830381858888f193505050503d80600081146111c7576040519150601f19603f3d011682016040523d82523d6000602084013e6111cc565b606091505b509095945050505050565b6000602082840312156111e957600080fd5b5035919050565b60008083601f84011261120257600080fd5b50813567ffffffffffffffff81111561121a57600080fd5b6020830191508360208260051b850101111561123557600080fd5b9250929050565b600080600080600080600060a0888a03121561125757600080fd5b873567ffffffffffffffff8082111561126f57600080fd5b61127b8b838c016111f0565b909950975060208a013591508082111561129457600080fd5b506112a18a828b016111f0565b989b979a50986040810135976060820135975060809091013595509350505050565b8035601081106109e257600080fd5b6001600160a01b038116811461064157600080fd5b600080604083850312156112fa57600080fd5b611303836112c3565b91506020830135611313816112d2565b809150509250929050565b60008060008060008060c0878903121561133757600080fd5b8635611342816112d2565b95506020870135611352816112d2565b94506040870135611362816112d2565b93506060870135611372816112d2565b92506080870135611382816112d2565b8092505060a087013590509295509295509295565b6000602082840312156113a957600080fd5b6113b2826112c3565b9392505050565b6001600160e01b031991909116815260200190565b6000602082840312156113e057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a8957610a896113e7565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561144f5761144f611410565b604052919050565b600067ffffffffffffffff82111561147157611471611410565b5060051b60200190565b6000602080838503121561148e57600080fd5b825167ffffffffffffffff8111156114a557600080fd5b8301601f810185136114b657600080fd5b80516114c96114c482611457565b611426565b81815260059190911b820183019083810190878311156114e857600080fd5b928401925b8284101561150f578351611500816112d2565b825292840192908401906114ed565b979650505050505050565b600081518084526020808501945080840160005b838110156115535781516001600160a01b03168752958201959082019060010161152e565b509495945050505050565b828152604060208201526000611577604083018461151a565b949350505050565b6000602080838503121561159257600080fd5b825167ffffffffffffffff8111156115a957600080fd5b8301601f810185136115ba57600080fd5b80516115c86114c482611457565b81815260059190911b820183019083810190878311156115e757600080fd5b928401925b8284101561150f578351825292840192908401906115ec565b81810381811115610a8957610a896113e7565b634e487b7160e01b600052602160045260246000fd5b6010811061163e5761163e611618565b9052565b60208101610a89828461162e565b60006020828403121561166257600080fd5b815180151581146113b257600080fd5b634e487b7160e01b600052603260045260246000fd5b6001600160e01b031984168152606081016116a6602083018561162e565b6001600160a01b03929092166040919091015292915050565b6001600160e01b03198316815260408101600b83106116e0576116e0611618565b8260208301529392505050565b6020815260006113b2602083018461151a565b8082028115828204841417610a8957610a896113e7565b60008261173457634e487b7160e01b600052601260045260246000fd5b50049056fe2417f25874c1cdc139a787dd21df976d40d767090442b3a2496917ecfc93b619a264697066735822122091537524a643a9f03eb03a81349878fe323f3667d37003befdc007b7f4c0abc664736f6c63430008110033";

type BridgeRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeReward__factory extends ContractFactory {
  constructor(...args: BridgeRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<BridgeReward> {
    return super.deploy(overrides || {}) as Promise<BridgeReward>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeReward {
    return super.attach(address) as BridgeReward;
  }
  connect(signer: Signer): BridgeReward__factory {
    return super.connect(signer) as BridgeReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRewardInterface {
    return new utils.Interface(_abi) as BridgeRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeReward {
    return new Contract(address, _abi, signerOrProvider) as BridgeReward;
  }
}
