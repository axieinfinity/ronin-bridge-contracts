/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBridgeSlash,
  MockBridgeSlashInterface,
} from "../MockBridgeSlash";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum ContractType",
        name: "expectedContractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "actual",
        type: "address",
      },
    ],
    name: "ErrUnexpectedInternalCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BridgeTrackingIncorrectlyResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
    ],
    name: "RemovalRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_VOTE_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_DURATION_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_1_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_2_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
    ],
    name: "calcSlashUntilPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "newSlashUntilPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "execSlashBridgeOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getAddedPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "addedPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPenaltyDurations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "penaltyDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
    ],
    name: "getSlashTier",
    outputs: [
      {
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getSlashUntilPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "untilPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeManagerContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeTrackingContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "dposGA",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeREP2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "isSlashDurationMetRemovalThreshold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currentBridgeOperator",
        type: "address",
      },
      {
        internalType: "address",
        name: "newBridgeOperator",
        type: "address",
      },
    ],
    name: "onBridgeOperatorUpdated",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "addeds",
        type: "bool[]",
      },
    ],
    name: "onBridgeOperatorsAdded",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    name: "onBridgeOperatorsRemoved",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6116a0806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063a025bd88116100ad578063ddc3f7f611610071578063ddc3f7f61461024f578063de981f1b14610257578063f8c8765e14610282578063f9f6087314610295578063fbb2f1941461029d57600080fd5b8063a025bd88146101fb578063c48549de1461020e578063c9631a1214610221578063d1a9ff4914610234578063d1e1f2f81461024757600080fd5b80635311153b116100f45780635311153b1461018b5780635ebae8a01461019e5780636dda4408146101ca578063865e6fd3146101e05780639c2f4459146101f357600080fd5b806301ffc9a7146101265780631288810a1461014e5780633b1544551461016e5780634dca592514610178575b600080fd5b610139610134366004610fad565b6102bd565b60405190151581526020015b60405180910390f35b61016161015c366004611023565b6102f4565b6040516101459190611065565b6101766103dc565b005b610176610186366004611196565b6104bc565b610161610199366004611023565b61074a565b6101b16101ac366004611271565b610823565b6040516001600160e01b03199091168152602001610145565b6101d2600181565b604051908152602001610145565b6101766101ee36600461134f565b6109a0565b6101d2603281565b610139610209366004611382565b6109bf565b6101b161021c3660046113a4565b6109d2565b6101b161022f366004611410565b6109f1565b6101d261024236600461142c565b610a70565b6101d2600581565b6101d2601e81565b61026a610265366004611465565b610a8d565b6040516001600160a01b039091168152602001610145565b610176610290366004611480565b610b08565b610161610c47565b6102b06102ab366004611382565b610c56565b60405161014591906114ea565b60006001600160e01b031982166314d72edb60e21b14806102ee57506001600160e01b031982166301ffc9a760e01b145b92915050565b6060818067ffffffffffffffff811115610310576103106110a9565b604051908082528060200260200182016040528015610339578160200160208202803683370190505b50915060008051602061164b83398151915260005b828110156103d35781600087878481811061036b5761036b611504565b9050602002016020810190610380919061151a565b6001600160a01b031681526020810191909152604001600020548451600160801b9091046001600160801b0316908590839081106103c0576103c0611504565b602090810291909101015260010161034e565b50505092915050565b60046103e781610c62565b600019600154146104345760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9034b734ba103932b8101960711b60448201526064015b60405180910390fd5b61043e6008610a8d565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190611535565b6104aa906001611564565b6001556104b960046000610cae565b50565b60036104c781610c62565b8160015481106107415783603281111561073f57865188511461050b576040516306b5667560e21b81526001600160e01b031960003516600482015260240161042b565b87511561073f5761051d868689610d52565b61054f576040517f64ba7143ea5a17abea37667aa9ae137e3afba5033c5f504770c02829c128189c90600090a161073f565b6000610559610dcf565b6040805180820190915260008082526020820181905291925060008051602061164b833981519152918080805b8e51811015610737578e81815181106105a1576105a1611504565b6020908102919091018101516001600160a01b03811660009081528883526040908190208151808301909252546001600160801b038082168352600160801b90910416928101839052965093508b111561072f576106188e828151811061060a5761060a611504565b60200260200101518d610e3a565b9150610633828c87600001516001600160801b03168a610e8b565b935061063f848c610ee2565b15610685576040516001600160801b0394506001600160a01b038416908c907fb32a150b9737190a456d8b2b81dd7d592a799ab2933ea494e44351acd41f835d90600090a35b6000826002811115610699576106996114d4565b1461072f576001600160801b0384146106fd578a836001600160a01b03168360028111156106c9576106c96114d4565b6040518781527f14441e950b7f9ed959e16b2405dd1a9d163efd5d85027b222dcf78b902a00d759060200160405180910390a45b6001600160a01b038316600090815260208790526040902080546001600160801b0319166001600160801b0386161790555b600101610586565b505050505050505b505b50505050505050565b6060818067ffffffffffffffff811115610766576107666110a9565b60405190808252806020026020018201604052801561078f578160200160208202803683370190505b50915060008051602061164b83398151915260005b828110156103d3578160008787848181106107c1576107c1611504565b90506020020160208101906107d6919061151a565b6001600160a01b0316815260208101919091526040016000205484516001600160801b039091169085908390811061081057610810611504565b60209081029190910101526001016107a4565b6000600b61083081610c62565b825184908114610861576040516306b5667560e21b81526001600160e01b031960003516600482015260240161042b565b8060000361087957506302f5d74560e51b9150610998565b60008051602061164b83398151915260006108946008610a8d565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611535565b905060005b838110156109895786818151811061091457610914611504565b60200260200101511561098157818360008b8b8581811061093757610937611504565b905060200201602081019061094c919061151a565b6001600160a01b03168152602081019190915260400160002080546001600160801b03928316600160801b0292169190911790555b6001016108fa565b506302f5d74560e51b94505050505b509392505050565b6109a8610f04565b6109b181610f60565b6109bb8282610cae565b5050565b60006109cb8383610ee2565b9392505050565b6000600b6109df81610c62565b506302f5d74560e51b95945050505050565b6000600b6109fe81610c62565b50506001600160a01b03918216600081815260008051602061164b8339815191526020526040808220939094168152928320825481546001600160801b0319166001600160801b0391821690811783558454600160801b908190049092169091021790558252556364b18d0960e11b90565b6000610a85848484610a80610dcf565b610e8b565b949350505050565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610ac457610ac46114d4565b60ff1681526020810191909152604001600020546001600160a01b0316905080610b03578160405163409140df60e11b815260040161042b919061158b565b919050565b600054610100900460ff1615808015610b285750600054600160ff909116105b80610b425750303b158015610b42575060005460ff166001145b610ba55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042b565b6000805460ff191660011790558015610bc8576000805461ff0019166101001790555b610bd3600886610cae565b610bde600b85610cae565b610be9600384610cae565b610bf4600483610cae565b6000196001558015610c40576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6060610c51610dcf565b905090565b60006109cb8383610e3a565b610c6b81610a8d565b6001600160a01b0316336001600160a01b0316146104b9576000356001600160e01b03191681336040516320e0f98d60e21b815260040161042b93929190611599565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f811115610ce457610ce46114d4565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f811115610d2557610d256114d4565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b8051600190600090815b81811015610db75785858281518110610d7757610d77611504565b60200260200101511115610d8e5760009350610db7565b848181518110610da057610da0611504565b602002602001015183019250806001019050610d5c565b50828015610dc55750858211155b9695505050505050565b604080516003808252608082019092526060916020820183803683370190505090506001818160ff1681518110610e0857610e08611504565b6020908102919091010152600581600260ff1681518110610e2b57610e2b611504565b60200260200101818152505090565b60008082612710610e4b86836115d0565b610e5591906115e3565b610e5f91906115fa565b9050610bb88111610e81576103e88111610e7a576000610a85565b6001610a85565b6002949350505050565b6000610ea1610e9b6001866115d0565b84610f96565b82866002811115610eb457610eb46114d4565b60ff1681518110610ec757610ec7611504565b6020026020010151610ed99190611564565b95945050505050565b6000601e610ef16001846115d0565b610efb90856115d0565b10159392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314610f5e576000356001600160e01b0319166001604051620f948f60ea1b815260040161042b92919061161c565b565b806001600160a01b03163b6000036104b957604051630bfc64a360e21b81526001600160a01b038216600482015260240161042b565b600081831015610fa657816109cb565b5090919050565b600060208284031215610fbf57600080fd5b81356001600160e01b0319811681146109cb57600080fd5b60008083601f840112610fe957600080fd5b50813567ffffffffffffffff81111561100157600080fd5b6020830191508360208260051b850101111561101c57600080fd5b9250929050565b6000806020838503121561103657600080fd5b823567ffffffffffffffff81111561104d57600080fd5b61105985828601610fd7565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561109d57835183529284019291840191600101611081565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110e8576110e86110a9565b604052919050565b600067ffffffffffffffff82111561110a5761110a6110a9565b5060051b60200190565b80356001600160a01b0381168114610b0357600080fd5b600082601f83011261113c57600080fd5b8135602061115161114c836110f0565b6110bf565b82815260059290921b8401810191818101908684111561117057600080fd5b8286015b8481101561118b5780358352918301918301611174565b509695505050505050565b600080600080600060a086880312156111ae57600080fd5b853567ffffffffffffffff808211156111c657600080fd5b818801915088601f8301126111da57600080fd5b813560206111ea61114c836110f0565b82815260059290921b8401810191818101908c84111561120957600080fd5b948201945b8386101561122e5761121f86611114565b8252948201949082019061120e565b9950508901359250508082111561124457600080fd5b506112518882890161112b565b959895975050505060408401359360608101359360809091013592509050565b60008060006040848603121561128657600080fd5b833567ffffffffffffffff8082111561129e57600080fd5b6112aa87838801610fd7565b90955093506020915085820135818111156112c457600080fd5b86019050601f810187136112d757600080fd5b80356112e561114c826110f0565b81815260059190911b8201830190838101908983111561130457600080fd5b928401925b8284101561133157833580151581146113225760008081fd5b82529284019290840190611309565b80955050505050509250925092565b803560108110610b0357600080fd5b6000806040838503121561136257600080fd5b61136b83611340565b915061137960208401611114565b90509250929050565b6000806040838503121561139557600080fd5b50508035926020909101359150565b600080600080604085870312156113ba57600080fd5b843567ffffffffffffffff808211156113d257600080fd5b6113de88838901610fd7565b909650945060208701359150808211156113f757600080fd5b5061140487828801610fd7565b95989497509550505050565b6000806040838503121561142357600080fd5b61136b83611114565b60008060006060848603121561144157600080fd5b83356003811061145057600080fd5b95602085013595506040909401359392505050565b60006020828403121561147757600080fd5b6109cb82611340565b6000806000806080858703121561149657600080fd5b61149f85611114565b93506114ad60208601611114565b92506114bb60408601611114565b91506114c960608601611114565b905092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600383106114fe576114fe6114d4565b91905290565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561152c57600080fd5b6109cb82611114565b60006020828403121561154757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102ee576102ee61154e565b60108110611587576115876114d4565b9052565b602081016102ee8284611577565b6001600160e01b031984168152606081016115b76020830185611577565b6001600160a01b03929092166040919091015292915050565b818103818111156102ee576102ee61154e565b80820281158282048414176102ee576102ee61154e565b60008261161757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b03198316815260408101600b831061163d5761163d6114d4565b826020830152939250505056fed08d185790a07c7b9b721e2713c8580010a57f31c72c16f6e80b831d0ee45bfea264697066735822122031a487aa56ad3a93a535fd8e43c0cfbdebcf0b95e9b21f47847ca940eef5638964736f6c63430008110033";

type MockBridgeSlashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBridgeSlashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBridgeSlash__factory extends ContractFactory {
  constructor(...args: MockBridgeSlashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBridgeSlash> {
    return super.deploy(overrides || {}) as Promise<MockBridgeSlash>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockBridgeSlash {
    return super.attach(address) as MockBridgeSlash;
  }
  connect(signer: Signer): MockBridgeSlash__factory {
    return super.connect(signer) as MockBridgeSlash__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBridgeSlashInterface {
    return new utils.Interface(_abi) as MockBridgeSlashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBridgeSlash {
    return new Contract(address, _abi, signerOrProvider) as MockBridgeSlash;
  }
}
