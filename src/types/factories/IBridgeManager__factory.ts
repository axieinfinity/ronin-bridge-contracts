/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBridgeManager,
  IBridgeManagerInterface,
} from "../IBridgeManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromBridgeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toBridgeOperator",
        type: "address",
      },
    ],
    name: "BridgeOperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
      {
        indexed: false,
        internalType: "uint96[]",
        name: "voteWeights",
        type: "uint96[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "BridgeOperatorsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "BridgeOperatorsRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96[]",
        name: "voteWeights",
        type: "uint96[]",
      },
      {
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "addBridgeOperators",
    outputs: [
      {
        internalType: "bool[]",
        name: "addeds",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "gorvernors",
        type: "address[]",
      },
    ],
    name: "getBridgeOperatorOf",
    outputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
    ],
    name: "getBridgeOperatorWeight",
    outputs: [
      {
        internalType: "uint96",
        name: "weight",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgeOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFullBridgeOperatorInfos",
    outputs: [
      {
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
      {
        internalType: "uint96[]",
        name: "weights",
        type: "uint96[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "getGovernorWeight",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
    ],
    name: "getGovernorWeights",
    outputs: [
      {
        internalType: "uint96[]",
        name: "weights",
        type: "uint96[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getGovernorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isBridgeOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "removeBridgeOperators",
    outputs: [
      {
        internalType: "bool[]",
        name: "removeds",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "governors",
        type: "address[]",
      },
    ],
    name: "sumGovernorsWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "sum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBridgeOperators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
    ],
    name: "updateBridgeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBridgeManager__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeManagerInterface {
    return new utils.Interface(_abi) as IBridgeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBridgeManager {
    return new Contract(address, _abi, signerOrProvider) as IBridgeManager;
  }
}
