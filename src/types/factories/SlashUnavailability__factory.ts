/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  SlashUnavailability,
  SlashUnavailabilityInterface,
} from "../SlashUnavailability";

const _abi = [
  {
    inputs: [],
    name: "ErrCannotSlashAValidatorTwiceOrSlashMoreThanOneValidatorInOneBlock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrEvidenceAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrInvalidThreshold",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBaseSlash.SlashType",
        name: "slashType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "unavailabilityTier1Threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unavailabilityTier2Threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slashAmountForUnavailabilityTier2Threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jailDurationForUnavailabilityTier2Threshold",
        type: "uint256",
      },
    ],
    name: "UnavailabilitySlashingConfigsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "checkBailedOutAtPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "currentUnavailabilityIndicator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "getUnavailabilityIndicator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnavailabilitySlashingConfigs",
    outputs: [
      {
        internalType: "uint256",
        name: "unavailabilityTier1Threshold_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unavailabilityTier2Threshold_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashAmountForUnavailabilityTier2Threshold_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jailDurationForUnavailabilityTier2Threshold_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUnavailabilitySlashedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tier1Threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tier2Threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slashAmountForTier2Threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_jailDurationForTier2Threshold",
        type: "uint256",
      },
    ],
    name: "setUnavailabilitySlashingConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validatorAddr",
        type: "address",
      },
    ],
    name: "slashUnavailability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class SlashUnavailability__factory {
  static readonly abi = _abi;
  static createInterface(): SlashUnavailabilityInterface {
    return new utils.Interface(_abi) as SlashUnavailabilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SlashUnavailability {
    return new Contract(address, _abi, signerOrProvider) as SlashUnavailability;
  }
}
