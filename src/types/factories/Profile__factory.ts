/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Profile, ProfileInterface } from "../Profile";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum RoleAccess",
        name: "infoType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ErrDuplicatedInfo",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "ErrDuplicatedPubkey",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrExistentProfile",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrIdAndConsensusDiffer",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrNonExistentProfile",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum RoleAccess",
        name: "infoType",
        type: "uint8",
      },
    ],
    name: "ErrZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrZeroPubkey",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "ProfileAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum RoleAccess",
        name: "addressType",
        type: "uint8",
      },
    ],
    name: "ProfileAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "PubkeyChanged",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "consensus",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "governor",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "pubkey",
            type: "bytes",
          },
        ],
        internalType: "struct IProfile.CandidateProfile",
        name: "profile",
        type: "tuple",
      },
    ],
    name: "addNewProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "changePubkey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getId2Profile",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "consensus",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "governor",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "pubkey",
            type: "bytes",
          },
        ],
        internalType: "struct IProfile.CandidateProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateMainnetV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "consensus",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "governor",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "pubkey",
            type: "bytes",
          },
        ],
        internalType: "struct IProfile.CandidateProfile",
        name: "profile",
        type: "tuple",
      },
    ],
    name: "registerProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b603354610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60335460ff90811610156100dc576033805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611461806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806392d487561161005b57806392d48756146100d0578063c4d66de8146100e3578063de981f1b146100f6578063f46609401461012657600080fd5b806368a5c1231461008d578063865e6fd3146100a25780639029bc60146100b557806391486604146100c8575b600080fd5b6100a061009b366004610f96565b610146565b005b6100a06100b0366004610ff5565b6101f3565b6100a06100c336600461102c565b610212565b6100a0610373565b6100a06100de36600461102c565b6107b3565b6100a06100f13660046110f4565b6107f9565b610109610104366004611118565b61090d565b6040516001600160a01b0390911681526020015b60405180910390f35b6101396101343660046110f4565b610988565b60405161011d9190611179565b600061015183610ab8565b60028101549091506001600160a01b0316331461019a576000356001600160e01b0319166001604051620f948f60ea1b815260040161019192919061120a565b60405180910390fd5b6101a382610af3565b6101ad8183610b33565b826001600160a01b03167fe13225a225fbfeebd9d707546f3d7adee5d72738ac686cc5b97266c49745a56b836040516101e69190611228565b60405180910390a2505050565b6101fb610b79565b61020481610bd5565b61020e8282610c0b565b5050565b80602001516001600160a01b031681600001516001600160a01b03161461024c5760405163491db47560e01b815260040160405180910390fd5b80516001600160a01b03908116600090815260208190526040902080549091161561028a5760405163249b38f960e01b815260040160405180910390fd5b81604001516001600160a01b0316336001600160a01b031614158061033257506102b4600861090d565b602083015160408085015190516304d971ab60e01b81526001600160a01b03928316600482015290821660248201529116906304d971ab90604401602060405180830381865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610330919061123b565b155b15610360576000356001600160e01b0319166001604051620f948f60ea1b815260040161019192919061120a565b61036982610caf565b61020e8183610cf8565b466107e4146103b75760405162461bcd60e51b815260206004820152601060248201526f1b5a5cdb585d18da0818da185a5b925160821b6044820152606401610191565b734d58ea7231c394d5804e8b06b1365915f906e27f33146104115760405162461bcd60e51b81526020600482015260146024820152733737ba1036b0b4b73732ba103232b83637bcb2b960611b6044820152606401610191565b604080516103a0810182527352c0dcd83aa1999ba6c3b0324c8299e30207373c815273f41af21f0a800dc4d86efb14ad46cfb9884fdf38602082015273e07d7e56588a6fd860c5073c70a099658c060f3d918101919091527352349003240770727900b06a3b3a90f5c0219ade6060820152732bddcaae1c6ccd53e436179b3fc07307ee6f3ef8608082015273ec702628f44c31acc56c3a59555be47e1f16eb1e60a082015273bd4bf317da1928cc2f9f4da9006401f3944a0ab560c082015273d11d9842babd5209b9b1155e46f5878c989125b760e08201527361089875ff9e506ae78c7fe9f7c388416520e38661010082015273d7fef73d95ccedb26483fd3c6c48393e507081596101208201527347cfcb64f8ea44d6ea7fab32f13efa2f8e65eec1610140820152738eec4f1c0878f73e8e09c1be78ac1465cc16544d610160820152739b959d27840a31988410ee69991bcf0110d61f0261018082015273ee11d2016e9f2fae606b2f12986811f4abbe62156101a082015273ca54a1700e0403dcb531f8db4ae3847758b90b016101c0820152734e7ea047ec7e95c7a02cb117128b94ccdd8356bf6101e0820152736e46924371d0e910769aabe0d867590deac2068461020082015273ae53daac1bf3c4633d4921b8c3f8d579e757f5bc6102208201527305ad3ded6fcc510324af8e2631717af6da5c8b5b6102408201527332d619dc6188409cebbc52f921ab306f07db085b61026082015273210744c64eea863cf0f972e5aebc683b98fb198461028082015273edcafc4ad8097c2012980a2a7087d74b86bddaf96102a082015273fc3e31519b551bd594235dd0ef014375a87c4e216102c0820152736aaabf51c5f6d2d93212cf7dad73d67afa0148d06102e08201527322c23429e46e7944d2918f2b368b799b11c417c16103008201527303a7b98c226225e330d11d1b9177891391fa4f806103208201527320238eb5643d4d7b7ab3c30f3bf7b8e2b85ca1e76103408201527307d28f88d677c4056ea6722aa35d92903b2a63da61036082015273262b9fcfe8cfa900af4d1f5c20396e969b9655dd6103808201526000805b601d8110156107ae576000808483601d81106107445761074461125d565b60200201516001600160a01b03166001600160a01b0316815260200190815260200160002091508281601d811061077d5761077d61125d565b602002015182546001600160a01b0319166001600160a01b03909116178255806107a681611273565b915050610726565b505050565b6107bb610b79565b80516001600160a01b0390811660009081526020819052604090208054909116156103695760405163249b38f960e01b815260040160405180910390fd5b603354610100900460ff16158080156108195750603354600160ff909116105b806108335750303b158015610833575060335460ff166001145b6108965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610191565b6033805460ff1916600117905580156108b9576033805461ff0019166101001790555b6108c4600883610c0b565b801561020e576033805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610944576109446111e0565b60ff1681526020810191909152604001600020546001600160a01b0316905080610983578160405163409140df60e11b8152600401610191919061129a565b919050565b6040805160c0810182526000808252602082018190529181018290526060808201839052608082019290925260a08101919091526001600160a01b0380831660009081526020818152604091829020825160c081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004820154909216608083015260058101805460a084019190610a2f906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906112b4565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b5050505050815250509050919050565b6001600160a01b0380821660009081526020819052604090208054909116610983576040516334152acb60e11b815260040160405180910390fd5b805160208083019190912060009081526001909152604090205460ff1615610b305780604051630f32bad960e31b81526004016101919190611228565b50565b60058201610b41828261133c565b506001806000610b5684805160209091012090565b81526020810191909152604001600020805460ff19169115159190911790555050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b03163314610bd3576000356001600160e01b0319166001604051620f948f60ea1b815260040161019192919061120a565b565b806001600160a01b03163b600003610b3057604051630bfc64a360e21b81526001600160a01b0382166004820152602401610191565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f811115610c4157610c416111e0565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f811115610c8257610c826111e0565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b610cbe60098260200151610de7565b610ccd60048260400151610de7565b610cdc600a8260600151610de7565b610ceb600a8260800151610e16565b610b308160a00151610af3565b805182546001600160a01b039182166001600160a01b031991821617845560208084015160018087018054928616928516831790556000918252918290526040808220805460ff199081168517909155818701516002890180549188169187168217905583528183208054821685179055606087015160038901805491909716951685179095559281529190912080549092161790556080810151610d9e908390610e5d565b610dac828260a00151610b33565b80516040516001600160a01b03909116907fc9da0ae38bd4761b72da1045c9b2618f0cd991dcac01e1f9bbf68474025f074390600090a25050565b6001600160a01b038116610e1057816040516315fb58b960e21b815260040161019191906113fc565b61020e82825b6001600160a01b03811660009081526001602052604090205460ff161561020e5781816001600160a01b031660405163720b355560e11b8152600401610191929190611410565b6004820180546001600160a01b0319166001600160a01b0383169081179091551561020e576001600160a01b03166000908152600160208190526040909120805460ff1916909117905550565b6001600160a01b0381168114610b3057600080fd5b803561098381610eaa565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610f0357610f03610eca565b60405290565b600082601f830112610f1a57600080fd5b813567ffffffffffffffff80821115610f3557610f35610eca565b604051601f8301601f19908116603f01168101908282118183101715610f5d57610f5d610eca565b81604052838152866020858801011115610f7657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610fa957600080fd5b8235610fb481610eaa565b9150602083013567ffffffffffffffff811115610fd057600080fd5b610fdc85828601610f09565b9150509250929050565b80356010811061098357600080fd5b6000806040838503121561100857600080fd5b61101183610fe6565b9150602083013561102181610eaa565b809150509250929050565b60006020828403121561103e57600080fd5b813567ffffffffffffffff8082111561105657600080fd5b9083019060c0828603121561106a57600080fd5b611072610ee0565b823561107d81610eaa565b8152602083013561108d81610eaa565b602082015260408301356110a081610eaa565b60408201526110b160608401610ebf565b60608201526110c260808401610ebf565b608082015260a0830135828111156110d957600080fd5b6110e587828601610f09565b60a08301525095945050505050565b60006020828403121561110657600080fd5b813561111181610eaa565b9392505050565b60006020828403121561112a57600080fd5b61111182610fe6565b6000815180845260005b818110156111595760208185018101518683018201520161113d565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600060018060a01b038084511660208401528060208501511660408401528060408501511660608401528060608501511660808401528060808501511660a08401525060a083015160c0808401526111d860e0840182611133565b949350505050565b634e487b7160e01b600052602160045260246000fd5b600b8110611206576112066111e0565b9052565b6001600160e01b0319831681526040810161111160208301846111f6565b6020815260006111116020830184611133565b60006020828403121561124d57600080fd5b8151801515811461111157600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161129357634e487b7160e01b600052601160045260246000fd5b5060010190565b60208101601083106112ae576112ae6111e0565b91905290565b600181811c908216806112c857607f821691505b6020821081036112e857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107ae57600081815260208120601f850160051c810160208610156113155750805b601f850160051c820191505b8181101561133457828155600101611321565b505050505050565b815167ffffffffffffffff81111561135657611356610eca565b61136a8161136484546112b4565b846112ee565b602080601f83116001811461139f57600084156113875750858301515b600019600386901b1c1916600185901b178555611334565b600085815260208120601f198616915b828110156113ce578886015182559484019460019091019084016113af565b50858210156113ec5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020810161140a82846111f6565b92915050565b6040810161141e82856111f6565b826020830152939250505056fea2646970667358221220de7a1328c00875b0dd2be1e6f23e681101abaca4b98f164b21ebeba7cf9f49b464736f6c63430008110033";

type ProfileConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Profile__factory extends ContractFactory {
  constructor(...args: ProfileConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Profile> {
    return super.deploy(overrides || {}) as Promise<Profile>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Profile {
    return super.attach(address) as Profile;
  }
  connect(signer: Signer): Profile__factory {
    return super.connect(signer) as Profile__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileInterface {
    return new utils.Interface(_abi) as ProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profile {
    return new Contract(address, _abi, signerOrProvider) as Profile;
  }
}
