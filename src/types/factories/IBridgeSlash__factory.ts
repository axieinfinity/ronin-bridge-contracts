/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IBridgeSlash, IBridgeSlashInterface } from "../IBridgeSlash";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
    ],
    name: "RemovalRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_VOTE_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_DURATION_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_1_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_2_PENALTY_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "execSlashBridgeOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getAddedPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "addedPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPenaltyDurations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "penaltyDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
    ],
    name: "getSlashTier",
    outputs: [
      {
        internalType: "enum IBridgeSlashEvents.Tier",
        name: "tier",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridgeOperators",
        type: "address[]",
      },
    ],
    name: "getSlashUntilPeriodOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "untilPeriods",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBridgeSlash__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeSlashInterface {
    return new utils.Interface(_abi) as IBridgeSlashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBridgeSlash {
    return new Contract(address, _abi, signerOrProvider) as IBridgeSlash;
  }
}
