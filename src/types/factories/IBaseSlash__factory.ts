/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IBaseSlash, IBaseSlashInterface } from "../IBaseSlash";

const _abi = [
  {
    inputs: [],
    name: "ErrEvidenceAlreadySubmitted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBaseSlash.SlashType",
        name: "slashType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
];

export class IBaseSlash__factory {
  static readonly abi = _abi;
  static createInterface(): IBaseSlashInterface {
    return new utils.Interface(_abi) as IBaseSlashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBaseSlash {
    return new Contract(address, _abi, signerOrProvider) as IBaseSlash;
  }
}
