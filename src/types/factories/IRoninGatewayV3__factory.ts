/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IRoninGatewayV3,
  IRoninGatewayV3Interface,
} from "../IRoninGatewayV3";

const _abi = [
  {
    inputs: [],
    name: "ErrInvalidTrustedThreshold",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrWithdrawalsMigrated",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrWithdrawnOnMainchainAlready",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiptHash",
        type: "bytes32",
      },
    ],
    name: "DepositVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiptHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Transfer.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiptHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Transfer.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "MainchainWithdrew",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "roninTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "mainchainTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "enum Token.Standard[]",
        name: "standards",
        type: "uint8[]",
      },
    ],
    name: "TokenMapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousDenominator",
        type: "uint256",
      },
    ],
    name: "TrustedThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiptHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Transfer.Receipt",
        name: "",
        type: "tuple",
      },
    ],
    name: "WithdrawalRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "receiptHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Transfer.Receipt",
        name: "",
        type: "tuple",
      },
    ],
    name: "WithdrawalSignaturesRequested",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipientAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddr",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        internalType: "struct Transfer.Request[]",
        name: "_requests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    name: "bulkRequestWithdrawalFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_withdrawals",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "bulkSubmitWithdrawalSignatures",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        internalType: "struct Transfer.Receipt",
        name: "_receipt",
        type: "tuple",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "depositVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roninToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    name: "getMainchainToken",
    outputs: [
      {
        components: [
          {
            internalType: "enum Token.Standard",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddr",
            type: "address",
          },
        ],
        internalType: "struct MappedTokenConsumer.MappedToken",
        name: "_token",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
    ],
    name: "getWithdrawalSignatures",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalId",
        type: "uint256",
      },
    ],
    name: "mainchainWithdrew",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "mainchainWithdrewVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_roninTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_mainchainTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
      {
        internalType: "enum Token.Standard[]",
        name: "_standards",
        type: "uint8[]",
      },
    ],
    name: "mapTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipientAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddr",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        internalType: "struct Transfer.Request",
        name: "_request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    name: "requestWithdrawalFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalId",
        type: "uint256",
      },
    ],
    name: "requestWithdrawalSignatures",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_withdrawalIds",
        type: "uint256[]",
      },
    ],
    name: "tryBulkAcknowledgeMainchainWithdrew",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Transfer.Kind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "mainchain",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenAddr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Owner",
            name: "ronin",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Token.Standard",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct Token.Info",
            name: "info",
            type: "tuple",
          },
        ],
        internalType: "struct Transfer.Receipt[]",
        name: "_receipts",
        type: "tuple[]",
      },
    ],
    name: "tryBulkDepositFor",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IRoninGatewayV3__factory {
  static readonly abi = _abi;
  static createInterface(): IRoninGatewayV3Interface {
    return new utils.Interface(_abi) as IRoninGatewayV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRoninGatewayV3 {
    return new Contract(address, _abi, signerOrProvider) as IRoninGatewayV3;
  }
}
