/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISlashBridgeVoting,
  ISlashBridgeVotingInterface,
} from "../ISlashBridgeVoting";

const _abi = [
  {
    inputs: [],
    name: "ErrEvidenceAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrInvalidSlash",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeVotingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeVotingSlashAmount",
        type: "uint256",
      },
    ],
    name: "BridgeVotingSlashingConfigsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IBaseSlash.SlashType",
        name: "slashType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [],
    name: "getBridgeVotingSlashingConfigs",
    outputs: [
      {
        internalType: "uint256",
        name: "_bridgeVotingThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bridgeVotingSlashAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slashAmount",
        type: "uint256",
      },
    ],
    name: "setBridgeVotingSlashingConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consensusAddr",
        type: "address",
      },
    ],
    name: "slashBridgeVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISlashBridgeVoting__factory {
  static readonly abi = _abi;
  static createInterface(): ISlashBridgeVotingInterface {
    return new utils.Interface(_abi) as ISlashBridgeVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISlashBridgeVoting {
    return new Contract(address, _abi, signerOrProvider) as ISlashBridgeVoting;
  }
}
