/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockStaking, MockStakingInterface } from "../MockStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ErrInvalidPoolShare",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PoolSharesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "poolAddrs",
        type: "address[]",
      },
    ],
    name: "PoolsUpdateConflicted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "poolAddrs",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
    ],
    name: "PoolsUpdateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "poolAddrs",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "aRps",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
    ],
    name: "PoolsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "debited",
        type: "uint256",
      },
    ],
    name: "UserRewardUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADDITION_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERIOD_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "decreaseReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addrList",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rewards",
        type: "uint256[]",
      },
    ],
    name: "execRecordRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "firstEverWrapup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_poolAddrs",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_userList",
        type: "address[]",
      },
    ],
    name: "getManyStakingAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_poolAddr",
        type: "address[]",
      },
    ],
    name: "getManyStakingTotals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getStakingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getStakingTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increasePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "increaseReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112a63803806112a683398101604081905261002f91610054565b603a80546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611213806100936000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806376664b65116100ad578063c2a672e011610071578063c2a672e01461026a578063d279c1911461027d578063d63e6ce714610290578063e788997214610298578063ed40860c146102a157600080fd5b806376664b65146101f05780637a7ad8931461021b578063895ab7421461022e57806391f8723f14610241578063adc9772e1461025757600080fd5b80631ed24195116100f45780631ed24195146101985780635faa65ff146101a05780636046cd99146101a85780636558954f146101d35780636b091695146101dd57600080fd5b8063038278841461013157806303f109931461014d578063086233af14610162578063095f64751461016a578063137ee36e1461018f575b600080fd5b61013a6104b081565b6040519081526020015b60405180910390f35b61016061015b366004610e27565b6102b4565b005b6101606102ce565b610182610178366004610e8c565b6060949350505050565b6040516101449190610f33565b61013a60395481565b61013a6102f0565b610160610300565b603a546101bb906001600160a01b031681565b6040516001600160a01b039091168152602001610144565b61013a6201518081565b61013a6101eb366004610f62565b61041c565b61013a6101fe366004610f62565b6001600160a01b0316600090815260356020526040902054919050565b610160610229366004610e27565b610453565b61013a61023c366004610f95565b610465565b61018261024f366004610fb0565b606092915050565b610160610265366004610ff2565b61048c565b610160610278366004610ff2565b610502565b61013a61028b366004610f95565b61056d565b61016061058e565b61013a60385481565b6101606102af366004610e8c565b6105a5565b80603960008282546102c69190611032565b909155505050565b60006039556102e06201518042611045565b6102eb906001611032565b603855565b60006102fb60385490565b905090565b6040805160018082528183019092526000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683375050603a5484519293506001600160a01b0316918491506000906103655761036561107d565b60200260200101906001600160a01b031690816001600160a01b0316815250506039548160008151811061039b5761039b61107d565b6020908102919091010152604051633b50218360e21b8152309063ed40860c906103cb90859085906004016110cc565b600060405180830381600087803b1580156103e557600080fd5b505af11580156103f9573d6000803e3d6000fd5b5050600060398190556038805493509150610413836110fa565b91905055505050565b600061044a838361042c60385490565b6001600160a01b0386166000908152603560205260409020546105ed565b90505b92915050565b80603960008282546102c69190611113565b603a546000906001600160a01b0383811691161461048457600061044d565b505060375490565b6001600160a01b038216600090815260356020526040812054906104b08383611032565b603a549091506104ca906001600160a01b031685836106eb565b6001600160a01b0384166000908152603560205260408120829055603780548592906104f7908490611032565b909155505050505050565b6001600160a01b038216600090815260356020526040812054906105268383611113565b603a54909150610540906001600160a01b031685836106eb565b6001600160a01b0384166000908152603560205260408120829055603780548592906104f7908490611113565b603a5460009061044d906001600160a01b0316836105896102f0565b610860565b6038805490600061059e836110fa565b9190505550565b6105e78484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060385486925085915061097b565b50505050565b6001600160a01b03808516600090815260016020908152604080832093871683529290529081206003810154849003610628575490506106e3565b6001600160a01b03861660009081526002602090815260408083208383528184206003860154855290925282206001810154839291901561068d57805460018601549094506106779085611113565b85600201546106869190611126565b9250610695565b846001015493505b81546000906106a5908690611113565b6106af9089611126565b9050670de0b6b3a76400006106c48286611032565b6106ce9190611045565b86546106da9190611032565b96505050505050505b949350505050565b60006106f660385490565b6001600160a01b03851660009081526002602081905260409091206001810154918101549293509183111561075257604051806040016040528061073988610465565b8152602090810185905281516001850155015160028301555b6001600160a01b03868116600090815260016020908152604080832093891683529281528282206035909152918120549061078f898988856105ed565b835490915081146107e1578083556040518181526001600160a01b0389811691908b16907faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad9060200160405180910390a35b6107ee8584888a86610d7f565b845460018085019190915560038401879055850154841461085557886001600160a01b0316867f81faf50e2aaf52eaba2ab841071efb9f6f0850a3e7d008b1336e6001d3d4963c876001016000015460405161084c91815260200190565b60405180910390a35b505050505050505050565b6001600160a01b038216600090815260356020526040812054610885858585846105ed565b9150836001600160a01b0316856001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b7846040516108cc91815260200190565b60405180910390a36001600160a01b038086166000818152600160209081526040808320948916835293815283822082815592825260029052919091206109169082868580610d7f565b600381018490556001600160a01b03868116600081815260026020908152604080832054600187015551918252928816927faa7c29611027fd4be148712bb54960253b7a7d5998c17769bfc424c2f5f185ad910160405180910390a350509392505050565b835182146109c457807fae52c603227f64e4c6101dde593aa9790a16b3ac77546bd746d758511e9560a58585856040516109b79392919061113d565b60405180910390a26105e7565b6000806000806000885167ffffffffffffffff8111156109e6576109e6611067565b604051908082528060200260200182016040528015610a0f578160200160208202803683370190505b5090506000895167ffffffffffffffff811115610a2e57610a2e611067565b604051908082528060200260200182016040528015610a57578160200160208202803683370190505b50905060008a5167ffffffffffffffff811115610a7657610a76611067565b604051908082528060200260200182016040528015610a9f578160200160208202803683370190505b50905060005b8b51811015610ce5578b8181518110610ac057610ac061107d565b60200260200101519550600060026000886001600160a01b03166001600160a01b031681526020019081526020016000209050610afc87610465565b6001600160a01b0388166000908152602081815260408083208e84529091529020600101549096508a9003610b6a57868389806001019a5081518110610b4457610b4461107d565b60200260200101906001600160a01b031690816001600160a01b03168152505050610cd3565b60028101548a1115610b9857604080518082019091528681526020018a905260018101869055600281018a90555b600181015415610be25760018101548c8c84818110610bb957610bb961107d565b90506020020135670de0b6b3a7640000610bd39190611126565b610bdd9190611045565b610be5565b60005b985088816000016000828254610bfb9190611032565b9182905550905085610c0d8a85611113565b81518110610c1d57610c1d61107d565b602090810291909101810191909152604080518082018252835481528083018d81526001600160a01b038b1660009081528085528381208f825290945291909220915182555160019182015581018690558584610c7a8a85611113565b81518110610c8a57610c8a61107d565b6020908102919091010152868d610ca18a85611113565b81518110610cb157610cb161107d565b60200260200101906001600160a01b031690816001600160a01b031681525050505b80610cdd816110fa565b915050610aa5565b508515610d2e57858152858b51038b52877fee74f10cc50bf4b7e57fd36be7d46288795f3a9151dae97505b718b392ba14a382604051610d259190611187565b60405180910390a25b8a5115610d7257877f0e54e0485f70f0f63bc25889ddbf01ce1269ad6f07fdb2df573a0fbdb4d66f888c8585604051610d699392919061119a565b60405180910390a25b5050505050505050505050565b8284600301541015610d9357600284018190555b6000610da3856002015484610e11565b90506000818660020154610db79190611113565b90508015610e0857600286018290556001870154811115610deb576040516352e521bf60e11b815260040160405180910390fd5b80876001016000016000828254610e029190611113565b90915550505b50505050505050565b6000818310610e20578161044a565b5090919050565b600060208284031215610e3957600080fd5b5035919050565b60008083601f840112610e5257600080fd5b50813567ffffffffffffffff811115610e6a57600080fd5b6020830191508360208260051b8501011115610e8557600080fd5b9250929050565b60008060008060408587031215610ea257600080fd5b843567ffffffffffffffff80821115610eba57600080fd5b610ec688838901610e40565b90965094506020870135915080821115610edf57600080fd5b50610eec87828801610e40565b95989497509550505050565b600081518084526020808501945080840160005b83811015610f2857815187529582019590820190600101610f0c565b509495945050505050565b60208152600061044a6020830184610ef8565b80356001600160a01b0381168114610f5d57600080fd5b919050565b60008060408385031215610f7557600080fd5b610f7e83610f46565b9150610f8c60208401610f46565b90509250929050565b600060208284031215610fa757600080fd5b61044a82610f46565b60008060208385031215610fc357600080fd5b823567ffffffffffffffff811115610fda57600080fd5b610fe685828601610e40565b90969095509350505050565b6000806040838503121561100557600080fd5b61100e83610f46565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044d5761044d61101c565b60008261106257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610f285781516001600160a01b0316875295820195908201906001016110a7565b6040815260006110df6040830185611093565b82810360208401526110f18185610ef8565b95945050505050565b60006001820161110c5761110c61101c565b5060010190565b8181038181111561044d5761044d61101c565b808202811582820484141761044d5761044d61101c565b6040815260006111506040830186611093565b82810360208401528381526001600160fb1b0384111561116f57600080fd5b8360051b808660208401370160200195945050505050565b60208152600061044a6020830184611093565b6060815260006111ad6060830186611093565b82810360208401526111bf8186610ef8565b905082810360408401526111d38185610ef8565b969550505050505056fea26469706673582212204391adffb8a2897dc5fd39142ee7df27834ea18e22bd87b2f229c9be08795ce764736f6c63430008110033";

type MockStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStaking__factory extends ContractFactory {
  constructor(...args: MockStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _poolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStaking> {
    return super.deploy(_poolAddr, overrides || {}) as Promise<MockStaking>;
  }
  getDeployTransaction(
    _poolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolAddr, overrides || {});
  }
  attach(address: string): MockStaking {
    return super.attach(address) as MockStaking;
  }
  connect(signer: Signer): MockStaking__factory {
    return super.connect(signer) as MockStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStakingInterface {
    return new utils.Interface(_abi) as MockStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStaking {
    return new Contract(address, _abi, signerOrProvider) as MockStaking;
  }
}
