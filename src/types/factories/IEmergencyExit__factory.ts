/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IEmergencyExit,
  IEmergencyExitInterface,
} from "../IEmergencyExit";

const _abi = [
  {
    inputs: [],
    name: "ErrAlreadyRequestedEmergencyExit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyExitLockedAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "consensusAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockedAmount",
        type: "uint256",
      },
    ],
    name: "EmergencyExitLockedFundReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "consensusAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contractBalance",
        type: "uint256",
      },
    ],
    name: "EmergencyExitLockedFundReleasingFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "consensusAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
    ],
    name: "EmergencyExitRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyExpiryDurationUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "emergencyExitLockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExpiryDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consensusAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_secLeftToRevoke",
        type: "uint256",
      },
    ],
    name: "execEmergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consensusAddr",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "execReleaseLockedFundForEmergencyExitRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_emergencyExitLockedAmount",
        type: "uint256",
      },
    ],
    name: "setEmergencyExitLockedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_emergencyExpiryDuration",
        type: "uint256",
      },
    ],
    name: "setEmergencyExpiryDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IEmergencyExit__factory {
  static readonly abi = _abi;
  static createInterface(): IEmergencyExitInterface {
    return new utils.Interface(_abi) as IEmergencyExitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEmergencyExit {
    return new Contract(address, _abi, signerOrProvider) as IEmergencyExit;
  }
}
