/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBridgeReward,
  MockBridgeRewardInterface,
} from "../MockBridgeReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "ErrContractTypeNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
    ],
    name: "ErrInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrInvalidArguments",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrRecipientRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRewardedPeriod",
        type: "uint256",
      },
    ],
    name: "ErrSyncTooFarPeriod",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum RoleAccess",
        name: "expectedRole",
        type: "uint8",
      },
    ],
    name: "ErrUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
    ],
    name: "ErrUnauthorizedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "msgSig",
        type: "bytes4",
      },
      {
        internalType: "enum ContractType",
        name: "expectedContractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "actual",
        type: "address",
      },
    ],
    name: "ErrUnexpectedInternalCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ErrZeroCodeContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardScatterFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardScattered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeRewardSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestPeriod",
        type: "uint256",
      },
    ],
    name: "BridgeRewardSyncTooFarPeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BridgeTrackingIncorrectlyResponded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceBefore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SafeReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "UpdatedRewardPerPeriod",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isValidTrackingResponse",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numBridgeOperators",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ballot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
    ],
    name: "calcReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isValidTrackingResponse",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numBridgeOperators",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ballot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashUntilPeriod",
        type: "uint256",
      },
    ],
    name: "calcRewardAndCheckSlashedStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSlashed",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "execSyncReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
    ],
    name: "getContract",
    outputs: [
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRewardedPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRewardScattered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRewardToppedUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeManagerContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeTrackingContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridgeSlashContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "validatorSetContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "dposGA",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeREP2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
    ],
    name: "isValidBridgeTrackingResponse",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveRON",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContractType",
        name: "contractType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardPerPeriod",
        type: "uint256",
      },
    ],
    name: "setRewardPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalBallot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVote",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "ballots",
        type: "uint256[]",
      },
    ],
    name: "shouldShareEqually",
    outputs: [
      {
        internalType: "bool",
        name: "shareEqually",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashUntilDuration",
        type: "uint256",
      },
    ],
    name: "shouldSlashedThisPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "periodLength",
        type: "uint256",
      },
    ],
    name: "syncReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503060805261001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611a726100fd6000396000610e970152611a726000f3fe6080604052600436106100fe5760003560e01c8063760b0a2511610095578063a6bd678811610064578063a6bd678814610277578063ad43663e14610297578063de981f1b146102ac578063f50e116b146102e4578063f5dbc4ee1461030457600080fd5b8063760b0a251461020f578063865e6fd31461022f5780638f7c34a21461024f57806395b6ef0c1461026457600080fd5b806334087952116100d157806334087952146101af5780633b154455146101d257806359f778df146101e75780636bcb6fd6146101ef57600080fd5b80630b8f9a73146101035780630cb12b631461013857806322ff2a041461015857806324a2f5791461018d575b600080fd5b34801561010f57600080fd5b5061012361011e366004611358565b610319565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b506101236101533660046113e5565b610329565b34801561016457600080fd5b5061017861017336600461149e565b61033e565b6040805192835290151560208301520161012f565b34801561019957600080fd5b506101ad6101a83660046114f3565b610360565b005b3480156101bb57600080fd5b506101c4610685565b60405190815260200161012f565b3480156101de57600080fd5b506101ad6106b4565b6101ad6107a7565b3480156101fb57600080fd5b506101ad61020a366004611558565b6107b1565b34801561021b57600080fd5b506101c461022a3660046115df565b6108f0565b34801561023b57600080fd5b506101ad61024a366004611647565b610909565b34801561025b57600080fd5b506101c4610928565b6101ad61027236600461167e565b610940565b34801561028357600080fd5b506101ad6102923660046114f3565b610aaa565b3480156102a357600080fd5b506101c4610abe565b3480156102b857600080fd5b506102cc6102c73660046116f7565b610ae8565b6040516001600160a01b03909116815260200161012f565b3480156102f057600080fd5b506101236102ff3660046113e5565b610b63565b34801561031057600080fd5b506101c4610b70565b6000828210155b90505b92915050565b6000610336848484610b9a565b949350505050565b60008061035089898989898989610bed565b9150915097509795505050505050565b61036933610c0e565b61039d576000356001600160e01b031916604051638f47e7e360e01b81526004016103949190611712565b60405180910390fd5b60006103a7610928565b905060006103b56008610ae8565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190611727565b9050818111610446576000356001600160e01b03191660405163053265f160e01b81526004016103949190611712565b806104518484611756565b111561047e576000356001600160e01b03191660405163053265f160e01b81526004016103949190611712565b610496600080516020611a1d83398151915284610c86565b5060006104a3600b610ae8565b6001600160a01b0316639b19dbfd6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105089190810190611769565b905060006105166003610ae8565b905060015b85811161067d5761067583836001600160a01b031663f67e815288876040518363ffffffff1660e01b8152600401610554929190611847565b600060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105999190810190611860565b60405163692f6a6360e11b8152600481018990526001600160a01b0386169063d25ed4c690602401602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611727565b604051637153af9b60e11b8152600481018a90526001600160a01b0387169063e2a75f3690602401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190611727565b9885019889610c9d565b60010161051b565b505050505050565b60006106af7f3663384f6436b31a97d9c9a02f64ab8b73ead575c5b6224fa0800a6bd57f62f45490565b905090565b60046106bf81610d9d565b6000196106ca610928565b1461070c5760405162461bcd60e51b815260206004820152601260248201527130b63932b0b23c9034b734ba103932b8101960711b6044820152606401610394565b610798600161071b6008610ae8565b6001600160a01b031663060406186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190611727565b61078691906118e6565b600080516020611a1d83398151915255565b6107a460046000610de9565b50565b6107af610e8d565b565b60036107bc81610d9d565b8685146107ea576000356001600160e01b0319166040516306b5667560e21b81526004016103949190611712565b86156108e65760006107fa610928565b90508060010183101561082e576000356001600160e01b03191660405163053265f160e01b81526004016103949190611712565b8060010183111561085c57604051634e4e051560e01b81526004810184905260248101829052604401610394565b50610874600080516020611a1d833981519152839055565b6108e688888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250899250889150879050610c9d565b5050505050505050565b60006108ff8686868686610f6e565b9695505050505050565b610911610f99565b61091a81610ff3565b6109248282610de9565b5050565b60006106af600080516020611a1d8339815191525490565b600054610100900460ff16158080156109605750600054600160ff909116105b8061097a5750303b15801561097a575060005460ff166001145b6109dd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610394565b6000805460ff191660011790558015610a00576000805461ff0019166101001790555b610a0b600b88610de9565b610a16600387610de9565b610a21600c86610de9565b610a2c600885610de9565b610a37600484610de9565b600019600080516020611a1d83398151915255610a5382611029565b610a5b610e8d565b8015610aa1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600b610ab581610d9d565b61092482611029565b60006106af7f90f7d557245e5dd9485f463e58974fa7cdc93c0abbd0a1afebb8f9640ec739105490565b60007fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600083600f811115610b1f57610b1f6118f9565b60ff1681526020810191909152604001600020546001600160a01b0316905080610b5e578160405163409140df60e11b81526004016103949190611923565b919050565b6000610336848484611088565b60006106af7f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c645490565b600080610ba8858585611088565b905080610bd9576040517f64ba7143ea5a17abea37667aa9ae137e3afba5033c5f504770c02829c128189c90600090a15b801580610be4575084155b95945050505050565b600082821015610c008989898989610f6e565b915097509795505050505050565b6000610c1a600b610ae8565b604051635a02d57960e11b81526001600160a01b038481166004830152919091169063b405aaf290602401602060405180830381865afa158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611931565b600061032383610c968585611103565b9250829055565b84516000610ca9610abe565b90506000610cb688611122565b90506000610cc587878a610b9a565b90506000806000805b87811015610d6357610d178589898f8581518110610cee57610cee611955565b60200260200101518f8e8c8881518110610d0a57610d0a611955565b6020026020010151610bed565b909450925082610d275783610d2a565b60005b610d349083611756565b9150610d5b898e8381518110610d4c57610d4c611955565b602002602001015186866111a0565b600101610cce565b50610d8e7f3663384f6436b31a97d9c9a02f64ab8b73ead575c5b6224fa0800a6bd57f62f482610c86565b50505050505050505050505050565b610da681610ae8565b6001600160a01b0316336001600160a01b0316146107a4576000356001600160e01b03191681336040516320e0f98d60e21b81526004016103949392919061196b565b807fdea3103d22025c269050bea94c0c84688877f12fa22b7e6d2d5d78a9a49aa1cb600084600f811115610e1f57610e1f6118f9565b60ff168152602081019190915260400160002080546001600160a01b0319166001600160a01b03928316179055811682600f811115610e6057610e606118f9565b6040517f865d1c228a8ea13709cfe61f346f7ff67f1bbd4a18ff31ad3e7147350d317c5990600090a35050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ee4576000356001600160e01b031916604051638f47e7e360e01b81526004016103949190611712565b337f7ae161a1f0ef2537f5ff1957021a50412e72abdc6a941a77d99361e91e7f3c3d610f2e7f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c645490565b604080519182523460208301520160405180910390a26107a47f9a8c9f129792436c37b7bd2d79c56132fc05bf26cc8070794648517c2a0c6c6434610c86565b600085610f8f5781610f8084866119a2565b610f8a91906119b9565b6108ff565b6108ff85856119b9565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b031633146107af576000356001600160e01b0319166001604051620f948f60ea1b81526004016103949291906119db565b806001600160a01b03163b6000036107a457604051630bfc64a360e21b81526001600160a01b0382166004820152602401610394565b6110527f90f7d557245e5dd9485f463e58974fa7cdc93c0abbd0a1afebb8f9640ec73910829055565b6040518181527f9b40b647582311cc8f5f7d27e7ce206d126605d1625b8299b7edaeefd869ef259060200160405180910390a150565b8051600190600090815b818110156110ed57858582815181106110ad576110ad611955565b602002602001015111156110c457600093506110ed565b8481815181106110d6576110d6611955565b602002602001015183019250806001019050611092565b508280156108ff57505093909311159392505050565b815481018181101561032357634e487b7160005260116020526024601cfd5b606061112e600c610ae8565b6001600160a01b0316635311153b836040518263ffffffff1660e01b81526004016111599190611a09565b6000604051808303816000875af1158015611178573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103239190810190611860565b6001600160a01b03831660009081527f518cfd198acbffe95e740cfce1af28a3f7de51f0d784893d3d72c5cc59d7062a60205260409020811561124057828160010160008282546111f19190611756565b9091555050604080516001600160a01b03861681526020810185905286917fb3d061c3ef3991b0d4b09f4c8b551d137c3d1e014cf5326462d3d1f6a8dfb9c291015b60405180910390a26112f1565b828160000160008282546112549190611756565b909155506112669050848460006112f8565b156112ac57604080516001600160a01b03861681526020810185905286917fbab0baccb39371d4d5206b519fe58d21cae9cdd63a1d1b5146ecdf405fd931529101611233565b604080516001600160a01b03861681526020810185905286917f74b217634c5a7790ce69770c5e35019970453d4da3973769e7d6cdb7ce6816a1910160405180910390a25b5050505050565b6000836001600160a01b0316838390604051600060405180830381858888f193505050503d8060008114611348576040519150601f19603f3d011682016040523d82523d6000602084013e61134d565b606091505b509095945050505050565b6000806040838503121561136b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113b9576113b961137a565b604052919050565b600067ffffffffffffffff8211156113db576113db61137a565b5060051b60200190565b6000806000606084860312156113fa57600080fd5b833592506020808501359250604085013567ffffffffffffffff81111561142057600080fd5b8501601f8101871361143157600080fd5b803561144461143f826113c1565b611390565b81815260059190911b8201830190838101908983111561146357600080fd5b928401925b8284101561148157833582529284019290840190611468565b80955050505050509250925092565b80151581146107a457600080fd5b600080600080600080600060e0888a0312156114b957600080fd5b87356114c481611490565b9960208901359950604089013598606081013598506080810135975060a0810135965060c00135945092505050565b60006020828403121561150557600080fd5b5035919050565b60008083601f84011261151e57600080fd5b50813567ffffffffffffffff81111561153657600080fd5b6020830191508360208260051b850101111561155157600080fd5b9250929050565b600080600080600080600060a0888a03121561157357600080fd5b873567ffffffffffffffff8082111561158b57600080fd5b6115978b838c0161150c565b909950975060208a01359150808211156115b057600080fd5b506115bd8a828b0161150c565b989b979a50986040810135976060820135975060809091013595509350505050565b600080600080600060a086880312156115f757600080fd5b853561160281611490565b97602087013597506040870135966060810135965060800135945092505050565b803560108110610b5e57600080fd5b6001600160a01b03811681146107a457600080fd5b6000806040838503121561165a57600080fd5b61166383611623565b9150602083013561167381611632565b809150509250929050565b60008060008060008060c0878903121561169757600080fd5b86356116a281611632565b955060208701356116b281611632565b945060408701356116c281611632565b935060608701356116d281611632565b925060808701356116e281611632565b8092505060a087013590509295509295509295565b60006020828403121561170957600080fd5b61032082611623565b6001600160e01b031991909116815260200190565b60006020828403121561173957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561032357610323611740565b6000602080838503121561177c57600080fd5b825167ffffffffffffffff81111561179357600080fd5b8301601f810185136117a457600080fd5b80516117b261143f826113c1565b81815260059190911b820183019083810190878311156117d157600080fd5b928401925b828410156117f85783516117e981611632565b825292840192908401906117d6565b979650505050505050565b600081518084526020808501945080840160005b8381101561183c5781516001600160a01b031687529582019590820190600101611817565b509495945050505050565b8281526040602082015260006103366040830184611803565b6000602080838503121561187357600080fd5b825167ffffffffffffffff81111561188a57600080fd5b8301601f8101851361189b57600080fd5b80516118a961143f826113c1565b81815260059190911b820183019083810190878311156118c857600080fd5b928401925b828410156117f8578351825292840192908401906118cd565b8181038181111561032357610323611740565b634e487b7160e01b600052602160045260246000fd5b6010811061191f5761191f6118f9565b9052565b60208101610323828461190f565b60006020828403121561194357600080fd5b815161194e81611490565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160e01b03198416815260608101611989602083018561190f565b6001600160a01b03929092166040919091015292915050565b808202811582820484141761032357610323611740565b6000826119d657634e487b7160e01b600052601260045260246000fd5b500490565b6001600160e01b03198316815260408101600b83106119fc576119fc6118f9565b8260208301529392505050565b602081526000610320602083018461180356fe2417f25874c1cdc139a787dd21df976d40d767090442b3a2496917ecfc93b619a2646970667358221220d46adb3bfc0aaa8753f7864310558713662d3b5264b0774672bb423d43c1fd1264736f6c63430008110033";

type MockBridgeRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBridgeRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBridgeReward__factory extends ContractFactory {
  constructor(...args: MockBridgeRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBridgeReward> {
    return super.deploy(overrides || {}) as Promise<MockBridgeReward>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockBridgeReward {
    return super.attach(address) as MockBridgeReward;
  }
  connect(signer: Signer): MockBridgeReward__factory {
    return super.connect(signer) as MockBridgeReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBridgeRewardInterface {
    return new utils.Interface(_abi) as MockBridgeRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBridgeReward {
    return new Contract(address, _abi, signerOrProvider) as MockBridgeReward;
  }
}
