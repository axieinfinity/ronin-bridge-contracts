/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISlashingExecution,
  ISlashingExecutionInterface,
} from "../ISlashingExecution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ErrCannotBailout",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "consensusAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jailedUntil",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deductedStakingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "blockProducerRewardDeprecated",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "bridgeOperatorRewardDeprecated",
        type: "bool",
      },
    ],
    name: "ValidatorPunished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "ValidatorUnjailed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validatorAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "execBailOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newJailedUntil",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "cannotBailout",
        type: "bool",
      },
    ],
    name: "execSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISlashingExecution__factory {
  static readonly abi = _abi;
  static createInterface(): ISlashingExecutionInterface {
    return new utils.Interface(_abi) as ISlashingExecutionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISlashingExecution {
    return new Contract(address, _abi, signerOrProvider) as ISlashingExecution;
  }
}
