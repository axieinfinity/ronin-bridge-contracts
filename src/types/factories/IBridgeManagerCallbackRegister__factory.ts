/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBridgeManagerCallbackRegister,
  IBridgeManagerCallbackRegisterInterface,
} from "../IBridgeManagerCallbackRegister";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "registers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "returnDatas",
        type: "bytes[]",
      },
    ],
    name: "Notified",
    type: "event",
  },
  {
    inputs: [],
    name: "getCallbackRegisters",
    outputs: [
      {
        internalType: "address[]",
        name: "registers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "registers",
        type: "address[]",
      },
    ],
    name: "registerCallbacks",
    outputs: [
      {
        internalType: "bool[]",
        name: "registereds",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "registers",
        type: "address[]",
      },
    ],
    name: "unregisterCallbacks",
    outputs: [
      {
        internalType: "bool[]",
        name: "unregistereds",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBridgeManagerCallbackRegister__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeManagerCallbackRegisterInterface {
    return new utils.Interface(_abi) as IBridgeManagerCallbackRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBridgeManagerCallbackRegister {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBridgeManagerCallbackRegister;
  }
}
